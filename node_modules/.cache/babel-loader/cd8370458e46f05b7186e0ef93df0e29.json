{"ast":null,"code":"var _jsxFileName = \"/home/snw/Documentos/React projects/fbs/src/form/main.js\";\n// Librerias\nimport React, { useState } from 'react';\nimport { useForm, FormContext } from 'react-hook-form';\nimport axios from 'axios'; // Layout\n\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form'; // Elementos\n\nimport Button from 'react-bootstrap/Button'; // Estilos\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/app.css'; // Componentes formulario\n\nimport InformacionPersonalFuncionario from './section1';\nimport ReferenciasFamiliares from './section2';\nimport InformacionLaboralFuncionario from './section3';\nimport InformacionSolicitudDelCredito from './section4';\nimport DeclaracionAutorizacionFirma from './section5'; // URL del servidor que recibirá los datos\n\nconst URL = 'http://3.80.200.194/ords/snw_fonviv/solicitud/crear';\n\nfunction Main() {\n  // Metodos principales de React-hook-form para capturar los datos, manejar validaciones y crear el contexto del formulario\n  const methods = useForm();\n  const {\n    register,\n    handleSubmit,\n    watch\n  } = methods; // Variables de estado (hooks) y sus Setters\n\n  const [fechaNacimiento, setFechaNacimiento] = useState();\n  const [fechaIngreso, setFechaIngreso] = useState();\n  const [personasaCargo, setPersonasaCargo] = useState([// Datagrid de personas a cargo\n  [, \"\", \"\"]]);\n  const [referenciasFamiliares, setReferenciasFamiliares] = useState([// Datagrid de referencias familiares\n  [, \"\", \"\"]]);\n  const [categoria, setCategoria] = useState();\n  const [vez, setVez] = useState();\n  const [subcategoria, setSubcategoria] = useState();\n  const [cardinalidadVivienta, setCardinalidadVivienta] = useState();\n  const [primas, setPrimas] = useState(); // Funciones para llamar los Setters de los hooks de las variables de estado\n\n  function cambiarFechaNacimiento(nuevaFecha) {\n    setFechaNacimiento(nuevaFecha);\n  }\n\n  function cambiarFechaIngreso(nuevaFecha) {\n    setFechaIngreso(nuevaFecha);\n  }\n\n  function cambiarPersonasaCargo(nuevasPersonas) {\n    setPersonasaCargo(nuevasPersonas);\n  } // TODO: Buscar la manera de eliminar la primera posicion vacia (Se requiere para que encaje con las columnas del datagrid \n\n\n  function cambiarReferenciasFamiliares(nuevasReferencias) {\n    setReferenciasFamiliares(nuevasReferencias);\n  }\n\n  function cambiarCategoria(nuevaCategoria) {\n    setCategoria(nuevaCategoria);\n  }\n\n  function cambiarVez(nuevaVez) {\n    setVez(nuevaVez);\n  }\n\n  function cambiarSubcategoria(nuevaSubcategoria) {\n    setSubcategoria(nuevaSubcategoria);\n  }\n\n  function cambiarCardinalidadVivienta(nuevaCardinalidad) {\n    setCardinalidadVivienta(nuevaCardinalidad);\n  }\n\n  function cambiarPrimas(nuevaPrima) {\n    setPrimas(nuevaPrima);\n  } // Funcion que se ejecuta al enviar el formulario, si las validaciones son exitosas\n\n\n  const onSubmit = data => {\n    let fechaFormateada = fechaNacimiento.getDate().toString() + '/' + (fechaNacimiento.getMonth() + 1).toString() + '/' + fechaNacimiento.getFullYear().toString();\n    data.fechaNacimiento = fechaFormateada;\n    fechaFormateada = fechaIngreso.getDate().toString() + '/' + (fechaIngreso.getMonth() + 1).toString() + '/' + fechaIngreso.getFullYear().toString();\n    data.fechaIngreso = fechaFormateada; // Se acoplan los datos de los datagrids NO implícitos por el register de react-hook-form\n\n    data.personasaCargo = personasaCargo;\n    data.referenciasFamiliares = referenciasFamiliares;\n    data.categoria = categoria;\n    data.vez = vez;\n    data.subcategoria = subcategoria;\n    data.cardinalidadvivienda = cardinalidadVivienta;\n    data.primas = primas;\n    console.log(data); // alert(JSON.stringify(data));\n    //alert(JSON.stringify(referenciasFamiliares));\n\n    axios.post(URL, data).then(response => {\n      console.log(response);\n    }).catch(error => {\n      //alert('fallo creando pedido' + error);\n      console.log(error);\n    });\n  };\n\n  return React.createElement(Container, {\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-center mb-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"SOLICITUD DE CR\\xC9DITO\"), \" \", React.createElement(FormContext, Object.assign({}, methods, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(InformacionPersonalFuncionario, {\n    fechaNacimiento: fechaNacimiento,\n    cambiarFechaNacimiento: cambiarFechaNacimiento,\n    personasaCargo: personasaCargo,\n    cambiarPersonasaCargo: cambiarPersonasaCargo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(ReferenciasFamiliares, {\n    referenciasFamiliares: referenciasFamiliares,\n    cambiarReferenciasFamiliares: cambiarReferenciasFamiliares,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(InformacionLaboralFuncionario, {\n    fechaIngreso: fechaIngreso,\n    cambiarFechaIngreso: cambiarFechaIngreso,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), React.createElement(InformacionSolicitudDelCredito, {\n    categoria: categoria,\n    cambiarCategoria: cambiarCategoria,\n    vez: vez,\n    cambiarVez: cambiarVez,\n    subcategoria: subcategoria,\n    cambiarSubcategoria: cambiarSubcategoria,\n    cardinalidadVivienta: cardinalidadVivienta,\n    cambiarCardinalidadVivienta: cambiarCardinalidadVivienta,\n    primas: primas,\n    cambiarPrimas: cambiarPrimas,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(Button, {\n    size: \"lg\",\n    variant: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Enviar\"), React.createElement(DeclaracionAutorizacionFirma, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }))));\n}\n\nexport default Main;","map":{"version":3,"sources":["/home/snw/Documentos/React projects/fbs/src/form/main.js"],"names":["React","useState","useForm","FormContext","axios","Container","Form","Button","InformacionPersonalFuncionario","ReferenciasFamiliares","InformacionLaboralFuncionario","InformacionSolicitudDelCredito","DeclaracionAutorizacionFirma","URL","Main","methods","register","handleSubmit","watch","fechaNacimiento","setFechaNacimiento","fechaIngreso","setFechaIngreso","personasaCargo","setPersonasaCargo","referenciasFamiliares","setReferenciasFamiliares","categoria","setCategoria","vez","setVez","subcategoria","setSubcategoria","cardinalidadVivienta","setCardinalidadVivienta","primas","setPrimas","cambiarFechaNacimiento","nuevaFecha","cambiarFechaIngreso","cambiarPersonasaCargo","nuevasPersonas","cambiarReferenciasFamiliares","nuevasReferencias","cambiarCategoria","nuevaCategoria","cambiarVez","nuevaVez","cambiarSubcategoria","nuevaSubcategoria","cambiarCardinalidadVivienta","nuevaCardinalidad","cambiarPrimas","nuevaPrima","onSubmit","data","fechaFormateada","getDate","toString","getMonth","getFullYear","cardinalidadvivienda","console","log","post","then","response","catch","error"],"mappings":"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","sourcesContent":["// Librerias\nimport React, { useState } from 'react';\nimport { useForm, FormContext } from 'react-hook-form'\nimport axios from 'axios';\n\n// Layout\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\n\n// Elementos\nimport Button from 'react-bootstrap/Button';\n\n// Estilos\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/app.css';\n\n// Componentes formulario\nimport InformacionPersonalFuncionario from './section1';\nimport ReferenciasFamiliares from './section2';\nimport InformacionLaboralFuncionario from './section3';\nimport InformacionSolicitudDelCredito from './section4';\nimport DeclaracionAutorizacionFirma from './section5';\n\n\n\n\n// URL del servidor que recibirá los datos\nconst URL = 'http://3.80.200.194/ords/snw_fonviv/solicitud/crear'\n\nfunction Main() {\n\n  // Metodos principales de React-hook-form para capturar los datos, manejar validaciones y crear el contexto del formulario\n  const methods = useForm();\n  const { register, handleSubmit, watch } = methods;\n  \n  // Variables de estado (hooks) y sus Setters\n  const [fechaNacimiento, setFechaNacimiento] = useState(); \n  const [fechaIngreso, setFechaIngreso] = useState(); \n  const [personasaCargo, setPersonasaCargo] = useState([ // Datagrid de personas a cargo\n    [,\"\", \"\",]\n  ]);\n  const [referenciasFamiliares, setReferenciasFamiliares] = useState([ // Datagrid de referencias familiares\n    [,\"\", \"\",]\n  ]);  \n  const [categoria, setCategoria] = useState();  \n  const [vez, setVez] = useState();  \n  const [subcategoria, setSubcategoria] = useState();  \n  const [cardinalidadVivienta, setCardinalidadVivienta] = useState();  \n  const [primas, setPrimas] = useState();  \n  \n \n  // Funciones para llamar los Setters de los hooks de las variables de estado\n  function cambiarFechaNacimiento(nuevaFecha) { setFechaNacimiento(nuevaFecha); }\n  function cambiarFechaIngreso(nuevaFecha) { setFechaIngreso(nuevaFecha); }\n  function cambiarPersonasaCargo(nuevasPersonas) { setPersonasaCargo(nuevasPersonas); } // TODO: Buscar la manera de eliminar la primera posicion vacia (Se requiere para que encaje con las columnas del datagrid \n  function cambiarReferenciasFamiliares(nuevasReferencias) { setReferenciasFamiliares(nuevasReferencias); } \n  function cambiarCategoria(nuevaCategoria) { setCategoria(nuevaCategoria); }\n  function cambiarVez(nuevaVez) { setVez(nuevaVez); }\n  function cambiarSubcategoria(nuevaSubcategoria) { setSubcategoria(nuevaSubcategoria); } \n  function cambiarCardinalidadVivienta(nuevaCardinalidad) { setCardinalidadVivienta(nuevaCardinalidad); } \n  function cambiarPrimas(nuevaPrima) { setPrimas(nuevaPrima); } \n\n  \n  // Funcion que se ejecuta al enviar el formulario, si las validaciones son exitosas\n  const onSubmit = data => {\n   \n    let fechaFormateada = \n      (fechaNacimiento.getDate()).toString() + '/' +\n      (fechaNacimiento.getMonth()+1).toString() + '/' + \n      (fechaNacimiento.getFullYear()).toString();\n\n    data.fechaNacimiento = fechaFormateada;\n      \n      fechaFormateada = \n      (fechaIngreso.getDate()).toString() + '/' +\n      (fechaIngreso.getMonth()+1).toString() + '/' + \n      (fechaIngreso.getFullYear()).toString();\n\n    data.fechaIngreso = fechaFormateada;\n\n    // Se acoplan los datos de los datagrids NO implícitos por el register de react-hook-form\n    data.personasaCargo = personasaCargo;\n    data.referenciasFamiliares = referenciasFamiliares;  \n    data.categoria = categoria\n    data.vez = vez\n    data.subcategoria = subcategoria\n    data.cardinalidadvivienda = cardinalidadVivienta\n    data.primas = primas\n\n\n    console.log(data);\n\n    // alert(JSON.stringify(data));\n    //alert(JSON.stringify(referenciasFamiliares));\n    \n    axios.post(URL, data)\n        .then(response => {\n          console.log(response);\n        })\n        .catch(error => {\n          //alert('fallo creando pedido' + error);\n          console.log(error)\n        });         \n  };   \n\n\n  return (    \n\n    <Container fluid>\n      \n      <h2 className=\"text-center mb-5\">SOLICITUD DE CRÉDITO</h2> {/*Encabezado del formulario*/}    \n    \n      <FormContext {...methods}>\n        <Form onSubmit = {handleSubmit(onSubmit)} >          \n                    \n          <InformacionPersonalFuncionario \n            fechaNacimiento={fechaNacimiento} cambiarFechaNacimiento={cambiarFechaNacimiento} \n            personasaCargo={personasaCargo} cambiarPersonasaCargo={cambiarPersonasaCargo}/>\n\n          <ReferenciasFamiliares \n            referenciasFamiliares={referenciasFamiliares} cambiarReferenciasFamiliares={cambiarReferenciasFamiliares}/>\n\n          <InformacionLaboralFuncionario             \n            fechaIngreso={fechaIngreso} cambiarFechaIngreso={cambiarFechaIngreso}/>\n\n          <InformacionSolicitudDelCredito \n            categoria={categoria} cambiarCategoria={cambiarCategoria}\n            vez={vez} cambiarVez={cambiarVez}\n            subcategoria={subcategoria} cambiarSubcategoria={cambiarSubcategoria}\n            cardinalidadVivienta={cardinalidadVivienta} cambiarCardinalidadVivienta={cambiarCardinalidadVivienta}\n            primas={primas} cambiarPrimas={cambiarPrimas}/>\n\n          <Button size=\"lg\" variant=\"primary\" type=\"submit\">{/*Enviar formulario*/}\n            Enviar  \n          </Button>   \n\n          <DeclaracionAutorizacionFirma />\n          \n          {/*Aqui va el boton enviar */}                \n\n        </Form>\n      </FormContext>\n\n    </Container>\n  );\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}