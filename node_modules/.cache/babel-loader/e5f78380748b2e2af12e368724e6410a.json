{"ast":null,"code":"var _jsxFileName = \"/home/snw/Documentos/React projects/fbs/src/form/main.js\";\n// Librerias\nimport React, { useState } from 'react';\nimport { useForm, FormContext } from 'react-hook-form';\nimport axios from 'axios'; // Layout\n\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form'; // Elementos\n\nimport Button from 'react-bootstrap/Button'; // Estilos\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/app.css'; // Componentes formulario\n\nimport InformacionPersonalFuncionario from './section1';\nimport ReferenciasFamiliares from './section2';\nimport InformacionLaboralFuncionario from './section3';\nimport InformacionSolicitudDelCredito from './section4';\nimport DeclaracionAutorizacionFirma from './section5'; // URL del servidor que recibirá los datos\n\nconst URL = 'http://3.80.200.194/ords/snw_fonviv/solicitud/crear';\n\nfunction Main() {\n  // Metodos principales de React-hook-form para capturar los datos, manejar validaciones y crear el contexto del formulario\n  const methods = useForm();\n  const {\n    register,\n    handleSubmit\n  } = methods; // Variables de estado (hooks)\n\n  const [fechaNacimiento, setFechaNacimiento] = useState();\n  const [personasaCargo, setPersonasaCargo] = useState([// Datagrid de personas a cargo\n  [, \"\", \"\"]]); // Funcion que se ejecuta al enviar el formulario, si las validaciones son exitosas\n\n  const onSubmit = data => {\n    let fechaFormateada = fechaNacimiento.getUTCMonth(); //setFechaNacimiento(fechaFormateada);\n\n    data.personasaCargo = personasaCargo;\n    data.fechaNacimiento = fechaNacimiento;\n    console.log(data); //alert(JSON.stringify(data));\n\n    alert(JSON.stringify(fechaFormateada));\n    /*\n    axios.post(URL, data)\n        .then(response => {\n          console.log(response);\n          console.log('data ' + response.data);         \n        })\n        .catch(error => {\n          //alert('fallo creando pedido' + error);\n          console.log(error)\n        }); \n    */\n  }; // Funciones para llamar el Set de los hooks de las variables de estado\n\n\n  function cambiarFechaNacimiento(nuevaFecha) {\n    setFechaNacimiento(nuevaFecha);\n  }\n\n  function cambiarPersonasaCargo(data) {\n    setPersonasaCargo(data);\n  } // TODO: Buscar la manera de eliminar la primera posicion vacia (Se requiere para que encaje con las columnas del datagrid \n\n\n  const handleClick = data => {\n    // console.log(data);\n    alert('hola');\n  }; // console.log(watch(\"nombres\")); // Se puede usar watch para ver el valor del item pasado por parametro\n\n\n  return React.createElement(Container, {\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-center mb-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"SOLICITUD DE CR\\xC9DITO\"), \" \", React.createElement(FormContext, Object.assign({}, methods, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"lg\",\n    variant: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Enviar\"), React.createElement(InformacionPersonalFuncionario, {\n    fechaNacimiento: fechaNacimiento,\n    cambiarFechaNacimiento: cambiarFechaNacimiento,\n    personasaCargo: personasaCargo,\n    cambiarPersonasaCargo: cambiarPersonasaCargo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(ReferenciasFamiliares, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(InformacionLaboralFuncionario, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(InformacionSolicitudDelCredito, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(DeclaracionAutorizacionFirma, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }))));\n}\n\nexport default Main;","map":{"version":3,"sources":["/home/snw/Documentos/React projects/fbs/src/form/main.js"],"names":["React","useState","useForm","FormContext","axios","Container","Form","Button","InformacionPersonalFuncionario","ReferenciasFamiliares","InformacionLaboralFuncionario","InformacionSolicitudDelCredito","DeclaracionAutorizacionFirma","URL","Main","methods","register","handleSubmit","fechaNacimiento","setFechaNacimiento","personasaCargo","setPersonasaCargo","onSubmit","data","fechaFormateada","getUTCMonth","console","log","alert","JSON","stringify","cambiarFechaNacimiento","nuevaFecha","cambiarPersonasaCargo","handleClick"],"mappings":"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","sourcesContent":["// Librerias\nimport React, { useState } from 'react';\nimport { useForm, FormContext } from 'react-hook-form'\nimport axios from 'axios';\n\n// Layout\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\n\n// Elementos\nimport Button from 'react-bootstrap/Button';\n\n// Estilos\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/app.css';\n\n// Componentes formulario\nimport InformacionPersonalFuncionario from './section1';\nimport ReferenciasFamiliares from './section2';\nimport InformacionLaboralFuncionario from './section3';\nimport InformacionSolicitudDelCredito from './section4';\nimport DeclaracionAutorizacionFirma from './section5';\n\n\n\n\n// URL del servidor que recibirá los datos\nconst URL = 'http://3.80.200.194/ords/snw_fonviv/solicitud/crear'\n\nfunction Main() {\n\n  // Metodos principales de React-hook-form para capturar los datos, manejar validaciones y crear el contexto del formulario\n  const methods = useForm();\n  const { register, handleSubmit } = methods;\n  \n  // Variables de estado (hooks)\n  const [fechaNacimiento, setFechaNacimiento] = useState(); \n  const [personasaCargo, setPersonasaCargo] = useState([ // Datagrid de personas a cargo\n    [,\"\", \"\",]\n  ]);\n\n  \n  \n  // Funcion que se ejecuta al enviar el formulario, si las validaciones son exitosas\n  const onSubmit = data => {\n   \n    let fechaFormateada = fechaNacimiento.getUTCMonth();\n    //setFechaNacimiento(fechaFormateada);\n    \n    data.personasaCargo = personasaCargo;\n    data.fechaNacimiento = fechaNacimiento;\n\n    console.log(data);\n\n    //alert(JSON.stringify(data));\n    alert(JSON.stringify(fechaFormateada));\n\n\n    /*\n    axios.post(URL, data)\n        .then(response => {\n          console.log(response);\n          console.log('data ' + response.data);         \n        })\n        .catch(error => {\n          //alert('fallo creando pedido' + error);\n          console.log(error)\n        }); \n    */\n    \n  }; \n\n  // Funciones para llamar el Set de los hooks de las variables de estado\n  function cambiarFechaNacimiento(nuevaFecha) { setFechaNacimiento(nuevaFecha); }\n  function cambiarPersonasaCargo(data) { setPersonasaCargo(data); } // TODO: Buscar la manera de eliminar la primera posicion vacia (Se requiere para que encaje con las columnas del datagrid \n  \n  const handleClick = data => {\n   \n    // console.log(data);\n    alert('hola');\n  }; \n\n  // console.log(watch(\"nombres\")); // Se puede usar watch para ver el valor del item pasado por parametro\n\n  return (    \n\n    <Container fluid>\n      \n      <h2 className=\"text-center mb-5\">SOLICITUD DE CRÉDITO</h2> {/*Encabezado del formulario*/}    \n    \n      <FormContext {...methods}>\n        <Form onSubmit = {handleSubmit(onSubmit)} >\n\n          <Button size=\"lg\" variant=\"primary\" type=\"submit\">{/*Enviar formulario*/}\n            Enviar  \n          </Button>   \n                    \n          <InformacionPersonalFuncionario \n            fechaNacimiento={fechaNacimiento} cambiarFechaNacimiento={cambiarFechaNacimiento} \n            personasaCargo={personasaCargo} cambiarPersonasaCargo={cambiarPersonasaCargo}/>\n\n          <ReferenciasFamiliares />\n\n          <InformacionLaboralFuncionario />\n\n          <InformacionSolicitudDelCredito />\n\n          <DeclaracionAutorizacionFirma />\n          \n          {/*Aqui va el boton enviar */}                \n\n        </Form>\n      </FormContext>\n\n    </Container>\n  );\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}