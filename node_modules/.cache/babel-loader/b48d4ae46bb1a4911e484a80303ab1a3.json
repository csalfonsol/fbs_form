{"ast":null,"code":"var _jsxFileName = \"/home/snw/Documentos/React projects/fbs/src/form/main.js\";\n// Librerias\nimport React, { useState } from 'react';\nimport { useForm, FormContext } from 'react-hook-form';\nimport axios from 'axios'; // Layout\n\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form'; // Elementos\n\nimport Button from 'react-bootstrap/Button'; // Estilos\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/app.css'; // Componentes formulario\n\nimport InformacionPersonalFuncionario from './section1';\nimport ReferenciasFamiliares from './section2';\nimport InformacionLaboralFuncionario from './section3';\nimport InformacionSolicitudDelCredito from './section4';\nimport DeclaracionAutorizacionFirma from './section5'; // URL del servidor que recibirá los datos\n\nconst URL = 'http://3.80.200.194/ords/snw_fonviv/solicitud/crear';\n\nfunction Main() {\n  // Metodos principales de React-hook-form para capturar los datos, manejar validaciones y crear el contexto del formulario\n  const methods = useForm();\n  const {\n    register,\n    handleSubmit,\n    watch\n  } = methods; // Variables de estado (hooks) y sus Setters\n\n  const [fechaNacimiento, setFechaNacimiento] = useState();\n  const [fechaIngreso, setFechaIngreso] = useState();\n  const [personasaCargo, setPersonasaCargo] = useState([// Datagrid de personas a cargo\n  [, \"\", \"\"]]);\n  const [referenciasFamiliares, setReferenciasFamiliares] = useState([// Datagrid de referencias familiares\n  [, \"\", \"\"]]);\n  asd; // Variable para determinar linea de credito (Vivienda, Vehiculo, Bienestar o calamidad)\n\n  const [linea, setLinea] = useState();\n  const [vez, setVez] = useState('1');\n  const [modalidad, setModalidad] = useState();\n  const [cardinalidadVivienta, setCardinalidadVivienta] = useState('individual');\n  const [primas, setPrimas] = useState('1');\n\n  const cambiarLinea = e => {\n    setLinea(value);\n  };\n\n  const cambiarVez = e => {\n    setVez(value);\n  };\n\n  const cambiarModalidad = e => {\n    setModalidad(value);\n  };\n\n  const cambiarCardinalidadVivienta = e => {\n    setCardinalidadVivienta(value);\n  };\n\n  const cambiarPrimas = e => {\n    setPrimas(value);\n  }; // Funciones para llamar los Setters de los hooks de las variables de estado\n\n\n  function cambiarFechaNacimiento(nuevaFecha) {\n    setFechaNacimiento(nuevaFecha);\n  }\n\n  function cambiarFechaIngreso(nuevaFecha) {\n    setFechaIngreso(nuevaFecha);\n  }\n\n  function cambiarPersonasaCargo(data) {\n    setPersonasaCargo(data);\n  } // TODO: Buscar la manera de eliminar la primera posicion vacia (Se requiere para que encaje con las columnas del datagrid \n\n\n  function cambiarReferenciasFamiliares(data) {\n    setReferenciasFamiliares(data);\n  } // Funcion que se ejecuta al enviar el formulario, si las validaciones son exitosas\n\n\n  const onSubmit = data => {\n    let fechaFormateada = fechaNacimiento.getDate().toString() + '/' + (fechaNacimiento.getMonth() + 1).toString() + '/' + fechaNacimiento.getFullYear().toString();\n    data.fechaNacimiento = fechaFormateada;\n    fechaFormateada = fechaIngreso.getDate().toString() + '/' + (fechaIngreso.getMonth() + 1).toString() + '/' + fechaIngreso.getFullYear().toString();\n    data.fechaIngreso = fechaFormateada; // Se acoplan los datos de los datagrids NO implícitos por el register de react-hook-form\n\n    data.personasaCargo = personasaCargo;\n    data.referenciasFamiliares = referenciasFamiliares;\n    console.log(data); // alert(JSON.stringify(data));\n\n    alert(JSON.stringify(referenciasFamiliares));\n    axios.post(URL, data).then(response => {\n      console.log(response);\n    }).catch(error => {\n      //alert('fallo creando pedido' + error);\n      console.log(error);\n    });\n  };\n\n  return React.createElement(Container, {\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-center mb-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"SOLICITUD DE CR\\xC9DITO\"), \" \", React.createElement(FormContext, Object.assign({}, methods, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), React.createElement(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(InformacionPersonalFuncionario, {\n    fechaNacimiento: fechaNacimiento,\n    cambiarFechaNacimiento: cambiarFechaNacimiento,\n    personasaCargo: personasaCargo,\n    cambiarPersonasaCargo: cambiarPersonasaCargo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), React.createElement(ReferenciasFamiliares, {\n    referenciasFamiliares: referenciasFamiliares,\n    cambiarReferenciasFamiliares: cambiarReferenciasFamiliares,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(InformacionLaboralFuncionario, {\n    fechaIngreso: fechaIngreso,\n    cambiarFechaIngreso: cambiarFechaIngreso,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), React.createElement(InformacionSolicitudDelCredito, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), React.createElement(Button, {\n    size: \"lg\",\n    variant: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Enviar\"), React.createElement(DeclaracionAutorizacionFirma, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }))));\n}\n\nexport default Main;","map":{"version":3,"sources":["/home/snw/Documentos/React projects/fbs/src/form/main.js"],"names":["React","useState","useForm","FormContext","axios","Container","Form","Button","InformacionPersonalFuncionario","ReferenciasFamiliares","InformacionLaboralFuncionario","InformacionSolicitudDelCredito","DeclaracionAutorizacionFirma","URL","Main","methods","register","handleSubmit","watch","fechaNacimiento","setFechaNacimiento","fechaIngreso","setFechaIngreso","personasaCargo","setPersonasaCargo","referenciasFamiliares","setReferenciasFamiliares","asd","linea","setLinea","vez","setVez","modalidad","setModalidad","cardinalidadVivienta","setCardinalidadVivienta","primas","setPrimas","cambiarLinea","e","value","cambiarVez","cambiarModalidad","cambiarCardinalidadVivienta","cambiarPrimas","cambiarFechaNacimiento","nuevaFecha","cambiarFechaIngreso","cambiarPersonasaCargo","data","cambiarReferenciasFamiliares","onSubmit","fechaFormateada","getDate","toString","getMonth","getFullYear","console","log","alert","JSON","stringify","post","then","response","catch","error"],"mappings":"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","sourcesContent":["// Librerias\nimport React, { useState } from 'react';\nimport { useForm, FormContext } from 'react-hook-form'\nimport axios from 'axios';\n\n// Layout\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\n\n// Elementos\nimport Button from 'react-bootstrap/Button';\n\n// Estilos\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/app.css';\n\n// Componentes formulario\nimport InformacionPersonalFuncionario from './section1';\nimport ReferenciasFamiliares from './section2';\nimport InformacionLaboralFuncionario from './section3';\nimport InformacionSolicitudDelCredito from './section4';\nimport DeclaracionAutorizacionFirma from './section5';\n\n\n\n\n// URL del servidor que recibirá los datos\nconst URL = 'http://3.80.200.194/ords/snw_fonviv/solicitud/crear'\n\nfunction Main() {\n\n  // Metodos principales de React-hook-form para capturar los datos, manejar validaciones y crear el contexto del formulario\n  const methods = useForm();\n  const { register, handleSubmit, watch } = methods;\n  \n  // Variables de estado (hooks) y sus Setters\n  const [fechaNacimiento, setFechaNacimiento] = useState(); \n  const [fechaIngreso, setFechaIngreso] = useState(); \n  const [personasaCargo, setPersonasaCargo] = useState([ // Datagrid de personas a cargo\n    [,\"\", \"\",]\n  ]);\n  const [referenciasFamiliares, setReferenciasFamiliares] = useState([ // Datagrid de referencias familiares\n    [,\"\", \"\",]\n  ]);\n\n  asd\n\n\n  // Variable para determinar linea de credito (Vivienda, Vehiculo, Bienestar o calamidad)\n  const [linea, setLinea] = useState();  \n\n  const [vez, setVez] = useState('1');  \n  const [modalidad, setModalidad] = useState();  \n  const [cardinalidadVivienta, setCardinalidadVivienta] = useState('individual');  \n  const [primas, setPrimas] = useState('1');  \n  \n\n  const cambiarLinea = e => { setLinea(value); }; \n  const cambiarVez = e => { setVez(value); }; \n  const cambiarModalidad = e => { setModalidad(value); }; \n  const cambiarCardinalidadVivienta = e => { setCardinalidadVivienta(value); }; \n  const cambiarPrimas = e => { setPrimas(value); }; \n\n\n\n\n\n\n  // Funciones para llamar los Setters de los hooks de las variables de estado\n  function cambiarFechaNacimiento(nuevaFecha) { setFechaNacimiento(nuevaFecha); }\n  function cambiarFechaIngreso(nuevaFecha) { setFechaIngreso(nuevaFecha); }\n  function cambiarPersonasaCargo(data) { setPersonasaCargo(data); } // TODO: Buscar la manera de eliminar la primera posicion vacia (Se requiere para que encaje con las columnas del datagrid \n  function cambiarReferenciasFamiliares(data) { setReferenciasFamiliares(data); } \n\n  \n  // Funcion que se ejecuta al enviar el formulario, si las validaciones son exitosas\n  const onSubmit = data => {\n   \n    let fechaFormateada = \n      (fechaNacimiento.getDate()).toString() + '/' +\n      (fechaNacimiento.getMonth()+1).toString() + '/' + \n      (fechaNacimiento.getFullYear()).toString();\n\n    data.fechaNacimiento = fechaFormateada;\n      \n      fechaFormateada = \n      (fechaIngreso.getDate()).toString() + '/' +\n      (fechaIngreso.getMonth()+1).toString() + '/' + \n      (fechaIngreso.getFullYear()).toString();\n\n    data.fechaIngreso = fechaFormateada;\n\n    // Se acoplan los datos de los datagrids NO implícitos por el register de react-hook-form\n    data.personasaCargo = personasaCargo;\n    data.referenciasFamiliares = referenciasFamiliares;  \n\n    console.log(data);\n\n    // alert(JSON.stringify(data));\n    alert(JSON.stringify(referenciasFamiliares));\n    \n    axios.post(URL, data)\n        .then(response => {\n          console.log(response);\n        })\n        .catch(error => {\n          //alert('fallo creando pedido' + error);\n          console.log(error)\n        });         \n  };   \n\n\n  return (    \n\n    <Container fluid>\n      \n      <h2 className=\"text-center mb-5\">SOLICITUD DE CRÉDITO</h2> {/*Encabezado del formulario*/}    \n    \n      <FormContext {...methods}>\n        <Form onSubmit = {handleSubmit(onSubmit)} >          \n                    \n          <InformacionPersonalFuncionario \n            fechaNacimiento={fechaNacimiento} cambiarFechaNacimiento={cambiarFechaNacimiento} \n            personasaCargo={personasaCargo} cambiarPersonasaCargo={cambiarPersonasaCargo}/>\n\n          <ReferenciasFamiliares \n            referenciasFamiliares={referenciasFamiliares} cambiarReferenciasFamiliares={cambiarReferenciasFamiliares}/>\n\n          <InformacionLaboralFuncionario             \n            fechaIngreso={fechaIngreso} cambiarFechaIngreso={cambiarFechaIngreso}/>\n\n          <InformacionSolicitudDelCredito />\n\n          <Button size=\"lg\" variant=\"primary\" type=\"submit\">{/*Enviar formulario*/}\n            Enviar  \n          </Button>   \n\n          <DeclaracionAutorizacionFirma />\n          \n          {/*Aqui va el boton enviar */}                \n\n        </Form>\n      </FormContext>\n\n    </Container>\n  );\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}