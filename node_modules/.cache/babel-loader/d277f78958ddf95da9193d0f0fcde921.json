{"ast":null,"code":"import _regeneratorRuntime from \"/home/snw/Documentos/React projects/fbs/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/snw/Documentos/React projects/fbs/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/home/snw/Documentos/React projects/fbs/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/snw/Documentos/React projects/fbs/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/snw/Documentos/React projects/fbs/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { createContext, useContext, createElement, useState as useState$2, useRef as useRef$2, useEffect as useEffect$2, isValidElement, cloneElement, Fragment } from 'react';\n\nvar isUndefined = function isUndefined(val) {\n  return val === undefined;\n};\n\nvar isNullOrUndefined = function isNullOrUndefined(value) {\n  return value === null || isUndefined(value);\n};\n\nvar isArray = function isArray(value) {\n  return Array.isArray(value);\n};\n\nvar isObjectType = function isObjectType(value) {\n  return typeof value === 'object';\n};\n\nvar isObject = function isObject(value) {\n  return !isNullOrUndefined(value) && !isArray(value) && isObjectType(value);\n};\n\nvar isHTMLElement = function isHTMLElement(value) {\n  return isObject(value) && value.nodeType === Node.ELEMENT_NODE;\n};\n\nvar VALIDATION_MODE = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit'\n};\nvar VALUE = 'value';\nvar UNDEFINED = 'undefined';\nvar EVENTS = {\n  BLUR: 'blur',\n  CHANGE: 'change',\n  INPUT: 'input'\n};\nvar INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate'\n};\nvar REGEX_IS_DEEP_PROP = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/;\nvar REGEX_IS_PLAIN_PROP = /^\\w*$/;\nvar REGEX_PROP_NAME = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\nvar REGEX_ESCAPE_CHAR = /\\\\(\\\\)?/g;\n\nfunction attachEventListeners(_ref) {\n  var field = _ref.field,\n      handleChange = _ref.handleChange,\n      isRadioOrCheckbox = _ref.isRadioOrCheckbox;\n  var ref = field.ref;\n\n  if (isHTMLElement(ref) && ref.addEventListener && handleChange) {\n    ref.addEventListener(isRadioOrCheckbox ? EVENTS.CHANGE : EVENTS.INPUT, handleChange);\n    ref.addEventListener(EVENTS.BLUR, handleChange);\n  }\n}\n\nvar isKey = function isKey(value) {\n  return !isArray(value) && (REGEX_IS_PLAIN_PROP.test(value) || !REGEX_IS_DEEP_PROP.test(value));\n};\n\nvar stringToPath = function stringToPath(string) {\n  var result = [];\n  string.replace(REGEX_PROP_NAME, function (match, number, quote, string) {\n    result.push(quote ? string.replace(REGEX_ESCAPE_CHAR, '$1') : number || match);\n  });\n  return result;\n};\n\nfunction set(object, path, value) {\n  var index = -1;\n  var tempPath = isKey(path) ? [path] : stringToPath(path);\n  var length = tempPath.length;\n  var lastIndex = length - 1;\n\n  while (++index < length) {\n    var key = tempPath[index];\n    var newValue = value;\n\n    if (index !== lastIndex) {\n      var objValue = object[key];\n      newValue = isObject(objValue) || isArray(objValue) ? objValue : !isNaN(tempPath[index + 1]) ? [] : {};\n    }\n\n    object[key] = newValue;\n    object = object[key];\n  }\n\n  return object;\n}\n\nvar transformToNestObject = function transformToNestObject(data) {\n  return Object.entries(data).reduce(function (previous, _ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        key = _ref3[0],\n        value = _ref3[1];\n\n    if (!isKey(key)) {\n      set(previous, key, value);\n      return previous;\n    }\n\n    return Object.assign(Object.assign({}, previous), _defineProperty({}, key, value));\n  }, {});\n};\n\nvar get = function get(obj, path, defaultValue) {\n  var result = path.split(/[,[\\].]+?/).filter(Boolean).reduce(function (result, key) {\n    return isNullOrUndefined(result) ? result : result[key];\n  }, obj);\n  return isUndefined(result) || result === obj ? obj[path] || defaultValue : result;\n};\n\nvar focusErrorField = function focusErrorField(fields, fieldErrors) {\n  for (var key in fields) {\n    if (get(fieldErrors, key)) {\n      var field = fields[key];\n\n      if (field) {\n        if (isHTMLElement(field.ref) && field.ref.focus) {\n          field.ref.focus();\n          break;\n        } else if (field.options) {\n          field.options[0].ref.focus();\n          break;\n        }\n      }\n    }\n  }\n};\n\nvar removeAllEventListeners = function removeAllEventListeners(ref, validateWithStateUpdate) {\n  if (isHTMLElement(ref) && ref.removeEventListener) {\n    ref.removeEventListener(EVENTS.INPUT, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.CHANGE, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.BLUR, validateWithStateUpdate);\n  }\n};\n\nvar isRadioInput = function isRadioInput(element) {\n  return !!element && element.type === 'radio';\n};\n\nvar isCheckBoxInput = function isCheckBoxInput(element) {\n  return !!element && element.type === 'checkbox';\n};\n\nfunction isDetached(element) {\n  if (!element) {\n    return true;\n  }\n\n  if (!(element instanceof HTMLElement) || element.nodeType === Node.DOCUMENT_NODE) {\n    return false;\n  }\n\n  return isDetached(element.parentNode);\n}\n\nfunction findRemovedFieldAndRemoveListener(fields, handleChange, field, forceDelete) {\n  if (!field) {\n    return;\n  }\n\n  var ref = field.ref,\n      _field$ref = field.ref,\n      name = _field$ref.name,\n      type = _field$ref.type,\n      mutationWatcher = field.mutationWatcher;\n\n  if (!type) {\n    delete fields[name];\n    return;\n  }\n\n  var fieldValue = fields[name];\n\n  if ((isRadioInput(ref) || isCheckBoxInput(ref)) && fieldValue) {\n    var options = fieldValue.options;\n\n    if (isArray(options) && options.length) {\n      options.forEach(function (_ref4, index) {\n        var ref = _ref4.ref,\n            mutationWatcher = _ref4.mutationWatcher;\n\n        if (ref && isDetached(ref) || forceDelete) {\n          removeAllEventListeners(ref, handleChange);\n\n          if (mutationWatcher) {\n            mutationWatcher.disconnect();\n          }\n\n          options.splice(index, 1);\n        }\n      });\n\n      if (options && !options.length) {\n        delete fields[name];\n      }\n    } else {\n      delete fields[name];\n    }\n  } else if (isDetached(ref) || forceDelete) {\n    removeAllEventListeners(ref, handleChange);\n\n    if (mutationWatcher) {\n      mutationWatcher.disconnect();\n    }\n\n    delete fields[name];\n  }\n}\n\nvar defaultReturn = {\n  isValid: false,\n  value: ''\n};\n\nvar getRadioValue = function getRadioValue(options) {\n  return isArray(options) ? options.reduce(function (previous, _ref5) {\n    var _ref5$ref = _ref5.ref,\n        checked = _ref5$ref.checked,\n        value = _ref5$ref.value;\n    return checked ? {\n      isValid: true,\n      value: value\n    } : previous;\n  }, defaultReturn) : defaultReturn;\n};\n\nvar getMultipleSelectValue = function getMultipleSelectValue(options) {\n  return _toConsumableArray(options).filter(function (_ref6) {\n    var selected = _ref6.selected;\n    return selected;\n  }).map(function (_ref7) {\n    var value = _ref7.value;\n    return value;\n  });\n};\n\nvar isFileInput = function isFileInput(element) {\n  return !!element && element.type === 'file';\n};\n\nvar isMultipleSelect = function isMultipleSelect(element) {\n  return !!element && element.type === 'select-multiple';\n};\n\nvar isEmptyString = function isEmptyString(value) {\n  return value === '';\n};\n\nvar defaultResult = {\n  value: false,\n  isValid: false\n};\nvar validResult = {\n  value: true,\n  isValid: true\n};\n\nvar getCheckboxValue = function getCheckboxValue(options) {\n  if (isArray(options)) {\n    if (options.length > 1) {\n      var values = options.filter(function (_ref8) {\n        var checked = _ref8.ref.checked;\n        return checked;\n      }).map(function (_ref9) {\n        var value = _ref9.ref.value;\n        return value;\n      });\n      return {\n        value: values,\n        isValid: !!values.length\n      };\n    }\n\n    var _options$0$ref = options[0].ref,\n        checked = _options$0$ref.checked,\n        value = _options$0$ref.value,\n        attributes = _options$0$ref.attributes;\n    return checked ? attributes && !isUndefined(attributes.value) ? isUndefined(value) || isEmptyString(value) ? validResult : {\n      value: value,\n      isValid: true\n    } : validResult : defaultResult;\n  }\n\n  return defaultResult;\n};\n\nfunction getFieldValue(fields, ref) {\n  var name = ref.name,\n      value = ref.value;\n  var field = fields[name];\n\n  if (isFileInput(ref)) {\n    return ref.files;\n  }\n\n  if (isRadioInput(ref)) {\n    return field ? getRadioValue(field.options).value : '';\n  }\n\n  if (isMultipleSelect(ref)) {\n    return getMultipleSelectValue(ref.options);\n  }\n\n  if (isCheckBoxInput(ref)) {\n    return field ? getCheckboxValue(field.options).value : false;\n  }\n\n  return value;\n}\n\nvar isString = function isString(value) {\n  return typeof value === 'string';\n};\n\nvar getFieldsValues = function getFieldsValues(fields, search) {\n  var output = {};\n  var isSearchString = isString(search);\n  var isSearchArray = isArray(search);\n  var isNest = search && search.nest;\n\n  var _loop = function _loop(name) {\n    if (isUndefined(search) || isNest || isSearchString && name.startsWith(search) || isSearchArray && search.find(function (data) {\n      return name.startsWith(data);\n    })) {\n      output[name] = getFieldValue(fields, fields[name].ref);\n    }\n  };\n\n  for (var name in fields) {\n    _loop(name);\n  }\n\n  return output;\n};\n\nvar isEmptyObject = function isEmptyObject(value) {\n  return isObject(value) && !Object.keys(value).length;\n};\n\nvar compareObject = function compareObject() {\n  var objectA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var objectB = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return Object.entries(objectA).reduce(function (previous, _ref10) {\n    var _ref11 = _slicedToArray(_ref10, 2),\n        key = _ref11[0],\n        value = _ref11[1];\n\n    return previous ? objectB[key] && objectB[key] === value : false;\n  }, true);\n};\n\nvar isSameError = function isSameError(error, _ref12) {\n  var type = _ref12.type,\n      types = _ref12.types,\n      message = _ref12.message;\n  return isObject(error) && error.type === type && error.message === message && compareObject(error.types, types);\n};\n\nfunction shouldUpdateWithError(_ref13) {\n  var errors = _ref13.errors,\n      name = _ref13.name,\n      error = _ref13.error,\n      validFields = _ref13.validFields,\n      fieldsWithValidation = _ref13.fieldsWithValidation;\n  var isFieldValid = isEmptyObject(error);\n  var isFormValid = isEmptyObject(errors);\n  var currentFieldError = get(error, name);\n  var existFieldError = get(errors, name);\n\n  if (isFieldValid && validFields.has(name) || existFieldError && existFieldError.isManual) {\n    return false;\n  }\n\n  if (isFormValid !== isFieldValid || !isFormValid && !existFieldError || isFieldValid && fieldsWithValidation.has(name) && !validFields.has(name)) {\n    return true;\n  }\n\n  return currentFieldError && !isSameError(existFieldError, currentFieldError);\n}\n\nvar isRegex = function isRegex(value) {\n  return value instanceof RegExp;\n};\n\nvar getValueAndMessage = function getValueAndMessage(validationData) {\n  var isPureObject = isObject(validationData) && !isRegex(validationData);\n  return {\n    value: isPureObject ? validationData.value : validationData,\n    message: isPureObject ? validationData.message : ''\n  };\n};\n\nvar isFunction = function isFunction(value) {\n  return typeof value === 'function';\n};\n\nvar isBoolean = function isBoolean(value) {\n  return typeof value === 'boolean';\n};\n\nfunction getValidateError(result, ref) {\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'validate';\n  var isStringValue = isString(result);\n\n  if (isStringValue || isBoolean(result) && !result) {\n    var message = isStringValue ? result : '';\n    return {\n      type: type,\n      message: message,\n      ref: ref\n    };\n  }\n}\n\nvar appendErrors = function appendErrors(name, validateAllFieldCriteria, errors, type, message) {\n  if (!validateAllFieldCriteria) {\n    return {};\n  }\n\n  var error = errors[name];\n  return Object.assign(Object.assign({}, error), {\n    types: Object.assign(Object.assign({}, error && error.types ? error.types : {}), _defineProperty({}, type, message || true))\n  });\n};\n\nvar validateField =\n/*#__PURE__*/\nfunction () {\n  var _ref14 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(fieldsRef, validateAllFieldCriteria, _ref15) {\n    var ref, _ref15$ref, type, value, name, options, required, maxLength, minLength, min, max, pattern, validate, fields, error, isRadio, isCheckBox, isRadioOrCheckbox, isEmpty, appendErrorsCurry, getMinMaxMessage, message, exceedMax, exceedMin, _getValueAndMessage, maxValue, maxMessage, _getValueAndMessage2, minValue, minMessage, valueNumber, valueDate, _getValueAndMessage3, maxLengthValue, maxLengthMessage, _getValueAndMessage4, minLengthValue, minLengthMessage, inputLength, _exceedMax, _exceedMin, _getValueAndMessage5, patternValue, patternMessage, fieldValue, validateRef, result, validateError, validateFunctions, validationResult;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            ref = _ref15.ref, _ref15$ref = _ref15.ref, type = _ref15$ref.type, value = _ref15$ref.value, name = _ref15$ref.name, options = _ref15.options, required = _ref15.required, maxLength = _ref15.maxLength, minLength = _ref15.minLength, min = _ref15.min, max = _ref15.max, pattern = _ref15.pattern, validate = _ref15.validate;\n            fields = fieldsRef.current;\n            error = {};\n            isRadio = isRadioInput(ref);\n            isCheckBox = isCheckBoxInput(ref);\n            isRadioOrCheckbox = isRadio || isCheckBox;\n            isEmpty = isEmptyString(value);\n            appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\n\n            getMinMaxMessage = function getMinMaxMessage(exceedMax, maxLengthMessage, minLengthMessage) {\n              var maxType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : INPUT_VALIDATION_RULES.maxLength;\n              var minType = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : INPUT_VALIDATION_RULES.minLength;\n              var message = exceedMax ? maxLengthMessage : minLengthMessage;\n              error[name] = Object.assign({\n                type: exceedMax ? maxType : minType,\n                message: message,\n                ref: ref\n              }, exceedMax ? appendErrorsCurry(maxType, message) : appendErrorsCurry(minType, message));\n\n              if (!validateAllFieldCriteria) {\n                return error;\n              }\n            };\n\n            if (!(required && (!isRadio && !isCheckBox && (isEmpty || isNullOrUndefined(value)) || isBoolean(value) && !value || isCheckBox && !getCheckboxValue(options).isValid || isRadio && !getRadioValue(options).isValid))) {\n              _context2.next = 14;\n              break;\n            }\n\n            message = isString(required) ? required : getValueAndMessage(required).message;\n            error[name] = Object.assign({\n              type: INPUT_VALIDATION_RULES.required,\n              message: message,\n              ref: isRadioOrCheckbox ? fields[name].options[0].ref : ref\n            }, appendErrorsCurry(INPUT_VALIDATION_RULES.required, message));\n\n            if (validateAllFieldCriteria) {\n              _context2.next = 14;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", error);\n\n          case 14:\n            if (!(!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n              _context2.next = 22;\n              break;\n            }\n\n            _getValueAndMessage = getValueAndMessage(max), maxValue = _getValueAndMessage.value, maxMessage = _getValueAndMessage.message;\n            _getValueAndMessage2 = getValueAndMessage(min), minValue = _getValueAndMessage2.value, minMessage = _getValueAndMessage2.message;\n\n            if (type === 'number' || !type && !isNaN(value)) {\n              valueNumber = ref.valueAsNumber || parseFloat(value);\n\n              if (!isNullOrUndefined(maxValue)) {\n                exceedMax = valueNumber > maxValue;\n              }\n\n              if (!isNullOrUndefined(minValue)) {\n                exceedMin = valueNumber < minValue;\n              }\n            } else {\n              valueDate = ref.valueAsDate || new Date(value);\n\n              if (isString(maxValue)) {\n                exceedMax = valueDate > new Date(maxValue);\n              }\n\n              if (isString(minValue)) {\n                exceedMin = valueDate < new Date(minValue);\n              }\n            }\n\n            if (!(exceedMax || exceedMin)) {\n              _context2.next = 22;\n              break;\n            }\n\n            getMinMaxMessage(!!exceedMax, maxMessage, minMessage, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\n\n            if (validateAllFieldCriteria) {\n              _context2.next = 22;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", error);\n\n          case 22:\n            if (!(isString(value) && !isEmpty && (maxLength || minLength))) {\n              _context2.next = 32;\n              break;\n            }\n\n            _getValueAndMessage3 = getValueAndMessage(maxLength), maxLengthValue = _getValueAndMessage3.value, maxLengthMessage = _getValueAndMessage3.message;\n            _getValueAndMessage4 = getValueAndMessage(minLength), minLengthValue = _getValueAndMessage4.value, minLengthMessage = _getValueAndMessage4.message;\n            inputLength = value.toString().length;\n            _exceedMax = maxLength && inputLength > maxLengthValue;\n            _exceedMin = minLength && inputLength < minLengthValue;\n\n            if (!(_exceedMax || _exceedMin)) {\n              _context2.next = 32;\n              break;\n            }\n\n            getMinMaxMessage(!!_exceedMax, maxLengthMessage, minLengthMessage);\n\n            if (validateAllFieldCriteria) {\n              _context2.next = 32;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", error);\n\n          case 32:\n            if (!(pattern && !isEmpty)) {\n              _context2.next = 38;\n              break;\n            }\n\n            _getValueAndMessage5 = getValueAndMessage(pattern), patternValue = _getValueAndMessage5.value, patternMessage = _getValueAndMessage5.message;\n\n            if (!(isRegex(patternValue) && !patternValue.test(value))) {\n              _context2.next = 38;\n              break;\n            }\n\n            error[name] = Object.assign({\n              type: INPUT_VALIDATION_RULES.pattern,\n              message: patternMessage,\n              ref: ref\n            }, appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, patternMessage));\n\n            if (validateAllFieldCriteria) {\n              _context2.next = 38;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", error);\n\n          case 38:\n            if (!validate) {\n              _context2.next = 61;\n              break;\n            }\n\n            fieldValue = getFieldValue(fields, ref);\n            validateRef = isRadioOrCheckbox && options ? options[0].ref : ref;\n\n            if (!isFunction(validate)) {\n              _context2.next = 52;\n              break;\n            }\n\n            _context2.next = 44;\n            return validate(fieldValue);\n\n          case 44:\n            result = _context2.sent;\n            validateError = getValidateError(result, validateRef);\n\n            if (!validateError) {\n              _context2.next = 50;\n              break;\n            }\n\n            error[name] = Object.assign(Object.assign({}, validateError), appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message));\n\n            if (validateAllFieldCriteria) {\n              _context2.next = 50;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", error);\n\n          case 50:\n            _context2.next = 61;\n            break;\n\n          case 52:\n            if (!isObject(validate)) {\n              _context2.next = 61;\n              break;\n            }\n\n            validateFunctions = Object.entries(validate);\n            _context2.next = 56;\n            return new Promise(function (resolve) {\n              validateFunctions.reduce(\n              /*#__PURE__*/\n              function () {\n                var _ref16 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee(previous, _ref17, index) {\n                  var _ref18, key, validate, result, validateResult, validateError;\n\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _ref18 = _slicedToArray(_ref17, 2), key = _ref18[0], validate = _ref18[1];\n                          _context.t2 = isEmptyObject;\n                          _context.next = 4;\n                          return previous;\n\n                        case 4:\n                          _context.t3 = _context.sent;\n                          _context.t1 = !(0, _context.t2)(_context.t3);\n\n                          if (!_context.t1) {\n                            _context.next = 8;\n                            break;\n                          }\n\n                          _context.t1 = !validateAllFieldCriteria;\n\n                        case 8:\n                          _context.t0 = _context.t1;\n\n                          if (_context.t0) {\n                            _context.next = 11;\n                            break;\n                          }\n\n                          _context.t0 = !isFunction(validate);\n\n                        case 11:\n                          if (!_context.t0) {\n                            _context.next = 13;\n                            break;\n                          }\n\n                          return _context.abrupt(\"return\", resolve(previous));\n\n                        case 13:\n                          _context.next = 15;\n                          return validate(fieldValue);\n\n                        case 15:\n                          validateResult = _context.sent;\n                          validateError = getValidateError(validateResult, validateRef, key);\n\n                          if (validateError) {\n                            result = Object.assign(Object.assign({}, validateError), appendErrorsCurry(key, validateError.message));\n\n                            if (validateAllFieldCriteria) {\n                              error[name] = result;\n                            }\n                          } else {\n                            result = previous;\n                          }\n\n                          return _context.abrupt(\"return\", validateFunctions.length - 1 === index ? resolve(result) : result);\n\n                        case 19:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x4, _x5, _x6) {\n                  return _ref16.apply(this, arguments);\n                };\n              }(), {});\n            });\n\n          case 56:\n            validationResult = _context2.sent;\n\n            if (isEmptyObject(validationResult)) {\n              _context2.next = 61;\n              break;\n            }\n\n            error[name] = Object.assign({\n              ref: validateRef\n            }, validationResult);\n\n            if (validateAllFieldCriteria) {\n              _context2.next = 61;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", error);\n\n          case 61:\n            return _context2.abrupt(\"return\", error);\n\n          case 62:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function validateField(_x, _x2, _x3) {\n    return _ref14.apply(this, arguments);\n  };\n}();\n\nvar parseErrorSchema = function parseErrorSchema(error, validateAllFieldCriteria) {\n  return isArray(error.inner) ? error.inner.reduce(function (previous, _ref19) {\n    var path = _ref19.path,\n        message = _ref19.message,\n        type = _ref19.type;\n    return Object.assign(Object.assign({}, previous), previous[path] && validateAllFieldCriteria ? _defineProperty({}, path, appendErrors(path, validateAllFieldCriteria, previous, type, message)) : _defineProperty({}, path, previous[path] || Object.assign({\n      message: message,\n      type: type\n    }, validateAllFieldCriteria ? {\n      types: _defineProperty({}, type, message || true)\n    } : {})));\n  }, {}) : _defineProperty({}, error.path, {\n    message: error.message,\n    type: error.type\n  });\n};\n\nfunction validateWithSchema(_x7, _x8, _x9, _x10, _x11) {\n  return _validateWithSchema.apply(this, arguments);\n}\n\nfunction _validateWithSchema() {\n  _validateWithSchema = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee10(validationSchema, validateAllFieldCriteria, data, validationResolver, context) {\n    return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            if (!validationResolver) {\n              _context10.next = 2;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", validationResolver(data, context));\n\n          case 2:\n            _context10.prev = 2;\n            _context10.next = 5;\n            return validationSchema.validate(data, {\n              abortEarly: false,\n              context: context\n            });\n\n          case 5:\n            _context10.t0 = _context10.sent;\n            _context10.t1 = {};\n            return _context10.abrupt(\"return\", {\n              values: _context10.t0,\n              errors: _context10.t1\n            });\n\n          case 10:\n            _context10.prev = 10;\n            _context10.t2 = _context10[\"catch\"](2);\n            return _context10.abrupt(\"return\", {\n              values: {},\n              errors: transformToNestObject(parseErrorSchema(_context10.t2, validateAllFieldCriteria))\n            });\n\n          case 13:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10, null, [[2, 10]]);\n  }));\n  return _validateWithSchema.apply(this, arguments);\n}\n\nvar getDefaultValue = function getDefaultValue(defaultValues, name, defaultValue) {\n  return isUndefined(defaultValues[name]) ? get(defaultValues, name, defaultValue) : defaultValues[name];\n};\n\nfunction flatArray(list) {\n  return list.reduce(function (a, b) {\n    return a.concat(isArray(b) ? flatArray(b) : b);\n  }, []);\n}\n\nvar isPrimitive = function isPrimitive(value) {\n  return isNullOrUndefined(value) || !isObjectType(value);\n};\n\nvar getPath = function getPath(path, values) {\n  var getInnerPath = function getInnerPath(value, key, isObject) {\n    var pathWithIndex = isObject ? \"\".concat(path, \".\").concat(key) : \"\".concat(path, \"[\").concat(key, \"]\");\n    return isPrimitive(value) ? pathWithIndex : getPath(pathWithIndex, value);\n  };\n\n  return isArray(values) ? values.map(function (value, key) {\n    return getInnerPath(value, key);\n  }) : Object.entries(values).map(function (_ref23) {\n    var _ref24 = _slicedToArray(_ref23, 2),\n        key = _ref24[0],\n        value = _ref24[1];\n\n    return getInnerPath(value, key, true);\n  });\n};\n\nvar getPath$1 = function getPath$1(parentPath, value) {\n  return flatArray(getPath(parentPath, value));\n};\n\nvar assignWatchFields = function assignWatchFields(fieldValues, fieldName, watchFields, combinedDefaultValues, watchFieldArray) {\n  var value;\n  watchFields.add(fieldName);\n\n  if (isEmptyObject(fieldValues)) {\n    value = watchFieldArray ? watchFieldArray : undefined;\n  } else if (!isUndefined(fieldValues[fieldName])) {\n    value = fieldValues[fieldName];\n    watchFields.add(fieldName);\n  } else {\n    value = get(transformToNestObject(fieldValues), fieldName);\n\n    if (isArray(watchFieldArray) && isArray(value) && value.length !== watchFieldArray.length) {\n      value = watchFieldArray;\n    }\n\n    if (!isUndefined(value)) {\n      getPath$1(fieldName, value).forEach(function (name) {\n        return watchFields.add(name);\n      });\n    }\n  }\n\n  return isUndefined(value) ? isObject(combinedDefaultValues) ? getDefaultValue(combinedDefaultValues, fieldName) : combinedDefaultValues : value;\n};\n\nvar skipValidation = function skipValidation(_ref25) {\n  var hasError = _ref25.hasError,\n      isBlurEvent = _ref25.isBlurEvent,\n      isOnSubmit = _ref25.isOnSubmit,\n      isReValidateOnSubmit = _ref25.isReValidateOnSubmit,\n      isOnBlur = _ref25.isOnBlur,\n      isReValidateOnBlur = _ref25.isReValidateOnBlur,\n      isSubmitted = _ref25.isSubmitted;\n  return isOnSubmit && isReValidateOnSubmit || isOnSubmit && !isSubmitted || isOnBlur && !isBlurEvent && !hasError || isReValidateOnBlur && !isBlurEvent && hasError || isReValidateOnSubmit && isSubmitted;\n};\n\nvar getFieldValueByName = function getFieldValueByName(fields, name) {\n  var results = transformToNestObject(getFieldsValues(fields));\n  return name ? get(results, name, results) : results;\n};\n\nfunction getIsFieldsDifferent(referenceArray, differenceArray) {\n  var isMatch = false;\n\n  if (!isArray(referenceArray) || !isArray(differenceArray) || referenceArray.length !== differenceArray.length) {\n    return true;\n  }\n\n  for (var i = 0; i < referenceArray.length; i++) {\n    if (isMatch) {\n      break;\n    }\n\n    var dataA = referenceArray[i];\n    var dataB = differenceArray[i];\n\n    if (isUndefined(dataB) || Object.keys(dataA).length !== Object.keys(dataB).length) {\n      isMatch = true;\n      break;\n    }\n\n    for (var key in dataA) {\n      if (dataA[key] !== dataB[key]) {\n        isMatch = true;\n        break;\n      }\n    }\n  }\n\n  return isMatch;\n}\n\nvar isMatchFieldArrayName = function isMatchFieldArrayName(name, searchName) {\n  return name.startsWith(\"\".concat(searchName, \"[\"));\n};\n\nvar isNameInFieldArray = function isNameInFieldArray(names, name) {\n  return _toConsumableArray(names).reduce(function (prev, current) {\n    return isMatchFieldArrayName(name, current) ? true : prev;\n  }, false);\n};\n\nvar isFileListObject = function isFileListObject(data) {\n  return typeof FileList !== UNDEFINED && data instanceof FileList;\n};\n\nfunction onDomRemove(element, onDetachCallback) {\n  var observer = new MutationObserver(function () {\n    if (isDetached(element)) {\n      observer.disconnect();\n      onDetachCallback();\n    }\n  });\n  observer.observe(window.document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\nfunction baseGet(object, path) {\n  var updatePath = isKey(path) ? [path] : castPath(path);\n  var length = path.length;\n  var index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return index == length ? object : undefined;\n}\n\nfunction baseSlice(array, start, end) {\n  var index = -1;\n  var length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : length + start;\n  }\n\n  end = end > length ? length : end;\n\n  if (end < 0) {\n    end += length;\n  }\n\n  length = start > end ? 0 : end - start;\n  var result = Array(length);\n\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n\n  return result;\n}\n\nfunction parent(object, path) {\n  return path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nfunction baseUnset(object, path) {\n  var updatePath = isKey(path) ? [path] : castPath(path);\n  object = parent(object, updatePath);\n  var key = updatePath[updatePath.length - 1];\n  return !(object != null) || delete object[key];\n}\n\nfunction unset(object, paths) {\n  paths.forEach(function (path) {\n    baseUnset(object, path);\n  });\n  return object;\n}\n\nvar modeChecker = function modeChecker(mode) {\n  return {\n    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n    isOnBlur: mode === VALIDATION_MODE.onBlur,\n    isOnChange: mode === VALIDATION_MODE.onChange\n  };\n};\n\nvar useRef = React.useRef,\n    useState = React.useState,\n    useCallback = React.useCallback,\n    useEffect = React.useEffect;\n\nfunction useForm() {\n  var _ref26 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref26$mode = _ref26.mode,\n      mode = _ref26$mode === void 0 ? VALIDATION_MODE.onSubmit : _ref26$mode,\n      _ref26$reValidateMode = _ref26.reValidateMode,\n      reValidateMode = _ref26$reValidateMode === void 0 ? VALIDATION_MODE.onChange : _ref26$reValidateMode,\n      validationSchema = _ref26.validationSchema,\n      validationResolver = _ref26.validationResolver,\n      validationContext = _ref26.validationContext,\n      _ref26$defaultValues = _ref26.defaultValues,\n      defaultValues = _ref26$defaultValues === void 0 ? {} : _ref26$defaultValues,\n      _ref26$submitFocusErr = _ref26.submitFocusError,\n      submitFocusError = _ref26$submitFocusErr === void 0 ? true : _ref26$submitFocusErr,\n      validateCriteriaMode = _ref26.validateCriteriaMode;\n\n  var fieldsRef = useRef({});\n  var validateAllFieldCriteria = validateCriteriaMode === 'all';\n  var errorsRef = useRef({});\n  var touchedFieldsRef = useRef({});\n  var watchFieldArrayRef = useRef({});\n  var watchFieldsRef = useRef(new Set());\n  var dirtyFieldsRef = useRef(new Set());\n  var fieldsWithValidationRef = useRef(new Set());\n  var validFieldsRef = useRef(new Set());\n  var isValidRef = useRef(true);\n  var defaultRenderValuesRef = useRef({});\n  var defaultValuesRef = useRef(defaultValues);\n  var isUnMount = useRef(false);\n  var isWatchAllRef = useRef(false);\n  var isSubmittedRef = useRef(false);\n  var isDirtyRef = useRef(false);\n  var submitCountRef = useRef(0);\n  var isSubmittingRef = useRef(false);\n  var handleChangeRef = useRef();\n  var resetFieldArrayFunctionRef = useRef({});\n  var fieldArrayNamesRef = useRef(new Set());\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      render = _useState2[1];\n\n  var _useRef$current = useRef(modeChecker(mode)).current,\n      isOnBlur = _useRef$current.isOnBlur,\n      isOnSubmit = _useRef$current.isOnSubmit;\n  var isWindowUndefined = typeof window === UNDEFINED;\n  var shouldValidateCallback = !!(validationSchema || validationResolver);\n  var isWeb = typeof document !== UNDEFINED && !isWindowUndefined && !isUndefined(window.HTMLElement);\n  var isProxyEnabled = isWeb && 'Proxy' in window;\n  var readFormStateRef = useRef({\n    dirty: !isProxyEnabled,\n    dirtyFields: !isProxyEnabled,\n    isSubmitted: isOnSubmit,\n    submitCount: !isProxyEnabled,\n    touched: !isProxyEnabled,\n    isSubmitting: !isProxyEnabled,\n    isValid: !isProxyEnabled\n  });\n  var _useRef$current2 = useRef(modeChecker(reValidateMode)).current,\n      isReValidateOnBlur = _useRef$current2.isOnBlur,\n      isReValidateOnSubmit = _useRef$current2.isOnSubmit;\n  var reRender = useCallback(function () {\n    if (!isUnMount.current) {\n      render({});\n    }\n  }, []);\n  var shouldRenderBaseOnError = useCallback(function (name, error, shouldRender, skipReRender) {\n    var shouldReRender = shouldRender || shouldUpdateWithError({\n      errors: errorsRef.current,\n      error: error,\n      name: name,\n      validFields: validFieldsRef.current,\n      fieldsWithValidation: fieldsWithValidationRef.current\n    });\n\n    if (isEmptyObject(error)) {\n      if (fieldsWithValidationRef.current.has(name) || shouldValidateCallback) {\n        validFieldsRef.current.add(name);\n        shouldReRender = shouldReRender || get(errorsRef.current, name);\n      }\n\n      errorsRef.current = unset(errorsRef.current, [name]);\n    } else {\n      validFieldsRef.current.delete(name);\n      shouldReRender = shouldReRender || !get(errorsRef.current, name);\n      set(errorsRef.current, name, error[name]);\n    }\n\n    if (shouldReRender && !skipReRender) {\n      reRender();\n      return true;\n    }\n  }, [reRender, shouldValidateCallback]);\n  var setFieldValue = useCallback(function (name, rawValue) {\n    var field = fieldsRef.current[name];\n\n    if (!field) {\n      return false;\n    }\n\n    var ref = field.ref;\n    var options = field.options;\n    var type = ref.type;\n    var value = isWeb && isHTMLElement(ref) && isNullOrUndefined(rawValue) ? '' : rawValue;\n\n    if (isRadioInput(ref) && options) {\n      options.forEach(function (_ref27) {\n        var radioRef = _ref27.ref;\n        return radioRef.checked = radioRef.value === value;\n      });\n    } else if (isFileInput(ref)) {\n      if (isEmptyString(value) || isFileListObject(value)) {\n        ref.files = value;\n      } else {\n        ref.value = value;\n      }\n    } else if (isMultipleSelect(ref)) {\n      _toConsumableArray(ref.options).forEach(function (selectRef) {\n        return selectRef.selected = value.includes(selectRef.value);\n      });\n    } else if (isCheckBoxInput(ref) && options) {\n      options.length > 1 ? options.forEach(function (_ref28) {\n        var checkboxRef = _ref28.ref;\n        return checkboxRef.checked = value.includes(checkboxRef.value);\n      }) : options[0].ref.checked = !!value;\n    } else {\n      ref.value = value;\n    }\n\n    return !!type;\n  }, [isWeb]);\n\n  var setDirty = function setDirty(name) {\n    if (!fieldsRef.current[name] || !readFormStateRef.current.dirty && !readFormStateRef.current.dirtyFields) {\n      return false;\n    }\n\n    var isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\n    var previousDirtyFieldsLength = dirtyFieldsRef.current.size;\n    var isDirty = defaultRenderValuesRef.current[name] !== getFieldValue(fieldsRef.current, fieldsRef.current[name].ref);\n\n    if (isFieldArray) {\n      var fieldArrayName = name.substring(0, name.indexOf('['));\n      isDirty = getIsFieldsDifferent(getFieldValueByName(fieldsRef.current, fieldArrayName), get(defaultValuesRef.current, fieldArrayName));\n    }\n\n    var isDirtyChanged = (isFieldArray ? isDirtyRef.current : dirtyFieldsRef.current.has(name)) !== isDirty;\n\n    if (isDirty) {\n      dirtyFieldsRef.current.add(name);\n    } else {\n      dirtyFieldsRef.current.delete(name);\n    }\n\n    isDirtyRef.current = isFieldArray ? isDirty : !!dirtyFieldsRef.current.size;\n    return readFormStateRef.current.dirty ? isDirtyChanged : previousDirtyFieldsLength !== dirtyFieldsRef.current.size;\n  };\n\n  var setInternalValue = useCallback(function (name, value) {\n    setFieldValue(name, value);\n\n    if (setDirty(name) || !get(touchedFieldsRef.current, name) && readFormStateRef.current.touched) {\n      return !!set(touchedFieldsRef.current, name, true);\n    }\n  }, [setFieldValue]);\n  var executeValidation = useCallback(\n  /*#__PURE__*/\n  function () {\n    var _ref29 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(name, skipReRender) {\n      var field, error;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              field = fieldsRef.current[name];\n\n              if (field) {\n                _context3.next = 3;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", false);\n\n            case 3:\n              _context3.next = 5;\n              return validateField(fieldsRef, validateAllFieldCriteria, field);\n\n            case 5:\n              error = _context3.sent;\n              shouldRenderBaseOnError(name, error, false, skipReRender);\n              return _context3.abrupt(\"return\", isEmptyObject(error));\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x12, _x13) {\n      return _ref29.apply(this, arguments);\n    };\n  }(), [shouldRenderBaseOnError, validateAllFieldCriteria]);\n  var executeSchemaValidation = useCallback(\n  /*#__PURE__*/\n  function () {\n    var _ref30 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4(payload) {\n      var _ref31, errors, previousFormIsValid;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return validateWithSchema(validationSchema, validateAllFieldCriteria, getFieldValueByName(fieldsRef.current), validationResolver, validationContext);\n\n            case 2:\n              _ref31 = _context4.sent;\n              errors = _ref31.errors;\n              previousFormIsValid = isValidRef.current;\n              isValidRef.current = isEmptyObject(errors);\n\n              if (isArray(payload)) {\n                payload.forEach(function (name) {\n                  var error = get(errors, name);\n\n                  if (error) {\n                    set(errorsRef.current, name, error);\n                  } else {\n                    unset(errorsRef.current, [name]);\n                  }\n                });\n                reRender();\n              } else {\n                shouldRenderBaseOnError(payload, get(errors, payload) ? _defineProperty({}, payload, get(errors, payload)) : {}, previousFormIsValid !== isValidRef.current);\n              }\n\n              return _context4.abrupt(\"return\", isEmptyObject(errorsRef.current));\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x14) {\n      return _ref30.apply(this, arguments);\n    };\n  }(), [reRender, shouldRenderBaseOnError, validateAllFieldCriteria, validationContext, validationResolver, validationSchema]);\n  var triggerValidation = useCallback(\n  /*#__PURE__*/\n  function () {\n    var _ref33 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee6(payload) {\n      var fields, result;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              fields = payload || Object.keys(fieldsRef.current);\n\n              if (!shouldValidateCallback) {\n                _context6.next = 3;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", executeSchemaValidation(fields));\n\n            case 3:\n              if (!isArray(fields)) {\n                _context6.next = 9;\n                break;\n              }\n\n              _context6.next = 6;\n              return Promise.all(fields.map(\n              /*#__PURE__*/\n              function () {\n                var _ref34 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee5(data) {\n                  return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          _context5.next = 2;\n                          return executeValidation(data, true);\n\n                        case 2:\n                          return _context5.abrupt(\"return\", _context5.sent);\n\n                        case 3:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5);\n                }));\n\n                return function (_x16) {\n                  return _ref34.apply(this, arguments);\n                };\n              }()));\n\n            case 6:\n              result = _context6.sent;\n              reRender();\n              return _context6.abrupt(\"return\", result.every(Boolean));\n\n            case 9:\n              _context6.next = 11;\n              return executeValidation(fields);\n\n            case 11:\n              return _context6.abrupt(\"return\", _context6.sent);\n\n            case 12:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function (_x15) {\n      return _ref33.apply(this, arguments);\n    };\n  }(), [executeSchemaValidation, executeValidation, reRender, shouldValidateCallback]);\n\n  var isFieldWatched = function isFieldWatched(name) {\n    return isWatchAllRef.current || watchFieldsRef.current.has(name) || !isKey(name) && fieldArrayNamesRef.current.has((name.match(/\\w+/) || [])[0]);\n  };\n\n  var setValue = useCallback(function (name, value, shouldValidate) {\n    var shouldRender = setInternalValue(name, value) || isFieldWatched(name);\n\n    if (shouldRender) {\n      reRender();\n    }\n\n    if (shouldValidate) {\n      triggerValidation(name);\n    }\n\n    return;\n  }, [reRender, setInternalValue, triggerValidation]);\n  handleChangeRef.current = handleChangeRef.current ? handleChangeRef.current :\n  /*#__PURE__*/\n  function () {\n    var _ref35 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee7(_ref36) {\n      var type, target, name, fields, errors, field, currentError, error, isBlurEvent, shouldSkipValidation, shouldUpdateDirty, shouldUpdateState, _ref37, _errors, previousFormIsValid;\n\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              type = _ref36.type, target = _ref36.target;\n              name = target ? target.name : '';\n              fields = fieldsRef.current;\n              errors = errorsRef.current;\n              field = fields[name];\n              currentError = get(errors, name);\n\n              if (field) {\n                _context7.next = 8;\n                break;\n              }\n\n              return _context7.abrupt(\"return\");\n\n            case 8:\n              isBlurEvent = type === EVENTS.BLUR;\n              shouldSkipValidation = skipValidation({\n                hasError: !!currentError,\n                isBlurEvent: isBlurEvent,\n                isOnSubmit: isOnSubmit,\n                isReValidateOnSubmit: isReValidateOnSubmit,\n                isOnBlur: isOnBlur,\n                isReValidateOnBlur: isReValidateOnBlur,\n                isSubmitted: isSubmittedRef.current\n              });\n              shouldUpdateDirty = setDirty(name);\n              shouldUpdateState = isFieldWatched(name) || shouldUpdateDirty;\n\n              if (isBlurEvent && !get(touchedFieldsRef.current, name) && readFormStateRef.current.touched) {\n                set(touchedFieldsRef.current, name, true);\n                shouldUpdateState = true;\n              }\n\n              if (!shouldSkipValidation) {\n                _context7.next = 15;\n                break;\n              }\n\n              return _context7.abrupt(\"return\", shouldUpdateState && reRender());\n\n            case 15:\n              if (!shouldValidateCallback) {\n                _context7.next = 26;\n                break;\n              }\n\n              _context7.next = 18;\n              return validateWithSchema(validationSchema, validateAllFieldCriteria, getFieldValueByName(fields), validationResolver, validationContext);\n\n            case 18:\n              _ref37 = _context7.sent;\n              _errors = _ref37.errors;\n              previousFormIsValid = isValidRef.current;\n              isValidRef.current = isEmptyObject(_errors);\n              error = get(_errors, name) ? _defineProperty({}, name, get(_errors, name)) : {};\n\n              if (previousFormIsValid !== isValidRef.current) {\n                shouldUpdateState = true;\n              }\n\n              _context7.next = 29;\n              break;\n\n            case 26:\n              _context7.next = 28;\n              return validateField(fieldsRef, validateAllFieldCriteria, field);\n\n            case 28:\n              error = _context7.sent;\n\n            case 29:\n              if (!shouldRenderBaseOnError(name, error) && shouldUpdateState) {\n                reRender();\n              }\n\n            case 30:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function (_x17) {\n      return _ref35.apply(this, arguments);\n    };\n  }();\n  var validateSchemaIsValid = useCallback(function () {\n    var values = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var fieldValues = isEmptyObject(defaultValuesRef.current) ? getFieldsValues(fieldsRef.current) : defaultValuesRef.current;\n    validateWithSchema(validationSchema, validateAllFieldCriteria, transformToNestObject(Object.assign(Object.assign({}, fieldValues), values)), validationResolver, validationContext).then(function (_ref39) {\n      var errors = _ref39.errors;\n      var previousFormIsValid = isValidRef.current;\n      isValidRef.current = isEmptyObject(errors);\n\n      if (previousFormIsValid !== isValidRef.current) {\n        reRender();\n      }\n    });\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [reRender, validateAllFieldCriteria, validationContext, validationResolver]);\n\n  var removeFieldEventListener = function removeFieldEventListener(field, forceDelete) {\n    if (!isUndefined(handleChangeRef.current) && field) {\n      findRemovedFieldAndRemoveListener(fieldsRef.current, handleChangeRef.current, field, forceDelete);\n    }\n  };\n\n  var removeFieldEventListenerAndRef = useCallback(function (field, forceDelete) {\n    if (!field || field && isNameInFieldArray(fieldArrayNamesRef.current, field.ref.name) && !forceDelete) {\n      return;\n    }\n\n    removeFieldEventListener(field, forceDelete);\n    var name = field.ref.name;\n    errorsRef.current = unset(errorsRef.current, [name]);\n    touchedFieldsRef.current = unset(touchedFieldsRef.current, [name]);\n    defaultRenderValuesRef.current = unset(defaultRenderValuesRef.current, [name]);\n    [dirtyFieldsRef, fieldsWithValidationRef, validFieldsRef, watchFieldsRef].forEach(function (data) {\n      return data.current.delete(name);\n    });\n\n    if (readFormStateRef.current.isValid || readFormStateRef.current.touched) {\n      reRender();\n\n      if (shouldValidateCallback) {\n        validateSchemaIsValid();\n      }\n    }\n  }, [reRender, shouldValidateCallback, validateSchemaIsValid]);\n\n  function clearError(name) {\n    if (isUndefined(name)) {\n      errorsRef.current = {};\n    } else {\n      unset(errorsRef.current, isArray(name) ? name : [name]);\n    }\n\n    reRender();\n  }\n\n  var setInternalError = function setInternalError(_ref40) {\n    var name = _ref40.name,\n        type = _ref40.type,\n        types = _ref40.types,\n        message = _ref40.message,\n        preventRender = _ref40.preventRender;\n    var field = fieldsRef.current[name];\n\n    if (!isSameError(errorsRef.current[name], {\n      type: type,\n      message: message,\n      types: types\n    })) {\n      set(errorsRef.current, name, {\n        type: type,\n        types: types,\n        message: message,\n        ref: field ? field.ref : {},\n        isManual: true\n      });\n\n      if (!preventRender) {\n        reRender();\n      }\n    }\n  };\n\n  function setError(name) {\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var message = arguments.length > 2 ? arguments[2] : undefined;\n\n    if (isString(name)) {\n      setInternalError(Object.assign({\n        name: name\n      }, isObject(type) ? {\n        types: type,\n        type: ''\n      } : {\n        type: type,\n        message: message\n      }));\n    } else if (isArray(name)) {\n      name.forEach(function (error) {\n        return setInternalError(Object.assign(Object.assign({}, error), {\n          preventRender: true\n        }));\n      });\n      reRender();\n    }\n  }\n\n  function watch(fieldNames, defaultValue) {\n    var combinedDefaultValues = isUndefined(defaultValue) ? isUndefined(defaultValuesRef.current) ? {} : defaultValuesRef.current : defaultValue;\n    var fieldValues = getFieldsValues(fieldsRef.current, fieldNames);\n    var watchFields = watchFieldsRef.current;\n\n    if (isProxyEnabled) {\n      readFormStateRef.current.dirty = true;\n    }\n\n    if (isString(fieldNames)) {\n      return assignWatchFields(fieldValues, fieldNames, watchFields, combinedDefaultValues, fieldArrayNamesRef.current.has(fieldNames) ? watchFieldArrayRef.current[fieldNames] : undefined);\n    }\n\n    if (isArray(fieldNames)) {\n      return fieldNames.reduce(function (previous, name) {\n        var value;\n\n        if (isEmptyObject(fieldsRef.current) && isObject(combinedDefaultValues)) {\n          value = getDefaultValue(combinedDefaultValues, name);\n        } else {\n          value = assignWatchFields(fieldValues, name, watchFields, combinedDefaultValues);\n        }\n\n        return Object.assign(Object.assign({}, previous), _defineProperty({}, name, value));\n      }, {});\n    }\n\n    isWatchAllRef.current = true;\n    var result = !isEmptyObject(fieldValues) && fieldValues || defaultValue || defaultValuesRef.current;\n    return fieldNames && fieldNames.nest ? transformToNestObject(result) : result;\n  }\n\n  function unregister(names) {\n    if (!isEmptyObject(fieldsRef.current)) {\n      (isArray(names) ? names : [names]).forEach(function (fieldName) {\n        return removeFieldEventListenerAndRef(fieldsRef.current[fieldName], true);\n      });\n    }\n  }\n\n  function registerFieldsRef(ref) {\n    var validateOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!ref.name) {\n      // eslint-disable-next-line no-console\n      return console.warn('Missing name @', ref);\n    }\n\n    var name = ref.name,\n        type = ref.type,\n        value = ref.value;\n    var fieldAttributes = Object.assign({\n      ref: ref\n    }, validateOptions);\n    var fields = fieldsRef.current;\n    var isRadioOrCheckbox = isRadioInput(ref) || isCheckBoxInput(ref);\n    var currentField = fields[name];\n    var isEmptyDefaultValue = true;\n    var isFieldArray = false;\n    var defaultValue;\n\n    if (isRadioOrCheckbox ? currentField && isArray(currentField.options) && currentField.options.find(function (_ref41) {\n      var ref = _ref41.ref;\n      return value === ref.value;\n    }) : currentField) {\n      fields[name] = Object.assign(Object.assign({}, currentField), validateOptions);\n      return;\n    }\n\n    if (type) {\n      var mutationWatcher = onDomRemove(ref, function () {\n        return removeFieldEventListenerAndRef(fieldAttributes);\n      });\n      currentField = isRadioOrCheckbox ? Object.assign({\n        options: [].concat(_toConsumableArray(currentField && currentField.options || []), [{\n          ref: ref,\n          mutationWatcher: mutationWatcher\n        }]),\n        ref: {\n          type: type,\n          name: name\n        }\n      }, validateOptions) : Object.assign(Object.assign({}, fieldAttributes), {\n        mutationWatcher: mutationWatcher\n      });\n    } else {\n      currentField = fieldAttributes;\n    }\n\n    fields[name] = currentField;\n\n    if (!isEmptyObject(defaultValuesRef.current)) {\n      defaultValue = getDefaultValue(defaultValuesRef.current, name);\n      isEmptyDefaultValue = isUndefined(defaultValue);\n      isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\n\n      if (!isEmptyDefaultValue && !isFieldArray) {\n        setFieldValue(name, defaultValue);\n      }\n    }\n\n    if (shouldValidateCallback && !isFieldArray && readFormStateRef.current.isValid) {\n      validateSchemaIsValid();\n    } else if (!isEmptyObject(validateOptions)) {\n      fieldsWithValidationRef.current.add(name);\n\n      if (!isOnSubmit && readFormStateRef.current.isValid) {\n        validateField(fieldsRef, validateAllFieldCriteria, currentField).then(function (error) {\n          var previousFormIsValid = isValidRef.current;\n\n          if (isEmptyObject(error)) {\n            validFieldsRef.current.add(name);\n          } else {\n            isValidRef.current = false;\n          }\n\n          if (previousFormIsValid !== isValidRef.current) {\n            reRender();\n          }\n        });\n      }\n    }\n\n    if (!defaultRenderValuesRef.current[name] && !(isFieldArray && isEmptyDefaultValue)) {\n      defaultRenderValuesRef.current[name] = isEmptyDefaultValue ? getFieldValue(fields, currentField.ref) : defaultValue;\n    }\n\n    if (!type) {\n      return;\n    }\n\n    var fieldToAttachListener = isRadioOrCheckbox && currentField.options ? currentField.options[currentField.options.length - 1] : currentField;\n    attachEventListeners({\n      field: fieldToAttachListener,\n      isRadioOrCheckbox: isRadioOrCheckbox,\n      handleChange: handleChangeRef.current\n    });\n  }\n\n  function register(refOrValidationOptions, validationOptions) {\n    if (isWindowUndefined) {\n      return;\n    }\n\n    if (isString(refOrValidationOptions)) {\n      registerFieldsRef({\n        name: refOrValidationOptions\n      }, validationOptions);\n      return;\n    }\n\n    if (isObject(refOrValidationOptions) && 'name' in refOrValidationOptions) {\n      registerFieldsRef(refOrValidationOptions, validationOptions);\n      return;\n    }\n\n    return function (ref) {\n      return ref && registerFieldsRef(ref, refOrValidationOptions);\n    };\n  }\n\n  var handleSubmit = useCallback(function (callback) {\n    return (\n      /*#__PURE__*/\n      function () {\n        var _ref42 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee9(e) {\n          var fieldErrors, fieldValues, fields, _ref43, errors, values, _ref44, _errors2, _values;\n\n          return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  if (e) {\n                    e.preventDefault();\n                    e.persist();\n                  }\n\n                  fields = fieldsRef.current;\n\n                  if (readFormStateRef.current.isSubmitting) {\n                    isSubmittingRef.current = true;\n                    reRender();\n                  }\n\n                  _context9.prev = 3;\n\n                  if (!shouldValidateCallback) {\n                    _context9.next = 16;\n                    break;\n                  }\n\n                  fieldValues = getFieldsValues(fields);\n                  _context9.next = 8;\n                  return validateWithSchema(validationSchema, validateAllFieldCriteria, transformToNestObject(fieldValues), validationResolver, validationContext);\n\n                case 8:\n                  _ref43 = _context9.sent;\n                  errors = _ref43.errors;\n                  values = _ref43.values;\n                  errorsRef.current = errors;\n                  fieldErrors = errors;\n                  fieldValues = values;\n                  _context9.next = 23;\n                  break;\n\n                case 16:\n                  _context9.next = 18;\n                  return Object.values(fields).reduce(\n                  /*#__PURE__*/\n                  function () {\n                    var _ref45 = _asyncToGenerator(\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(function _callee8(previous, field) {\n                      var resolvedPrevious, ref, name, fieldError;\n                      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n                        while (1) {\n                          switch (_context8.prev = _context8.next) {\n                            case 0:\n                              if (field) {\n                                _context8.next = 2;\n                                break;\n                              }\n\n                              return _context8.abrupt(\"return\", previous);\n\n                            case 2:\n                              _context8.next = 4;\n                              return previous;\n\n                            case 4:\n                              resolvedPrevious = _context8.sent;\n                              ref = field.ref, name = field.ref.name;\n\n                              if (fields[name]) {\n                                _context8.next = 8;\n                                break;\n                              }\n\n                              return _context8.abrupt(\"return\", Promise.resolve(resolvedPrevious));\n\n                            case 8:\n                              _context8.next = 10;\n                              return validateField(fieldsRef, validateAllFieldCriteria, field);\n\n                            case 10:\n                              fieldError = _context8.sent;\n\n                              if (!fieldError[name]) {\n                                _context8.next = 15;\n                                break;\n                              }\n\n                              set(resolvedPrevious.errors, name, fieldError[name]);\n                              validFieldsRef.current.delete(name);\n                              return _context8.abrupt(\"return\", Promise.resolve(resolvedPrevious));\n\n                            case 15:\n                              if (fieldsWithValidationRef.current.has(name)) {\n                                validFieldsRef.current.add(name);\n                              }\n\n                              resolvedPrevious.values[name] = getFieldValue(fields, ref);\n                              return _context8.abrupt(\"return\", Promise.resolve(resolvedPrevious));\n\n                            case 18:\n                            case \"end\":\n                              return _context8.stop();\n                          }\n                        }\n                      }, _callee8);\n                    }));\n\n                    return function (_x19, _x20) {\n                      return _ref45.apply(this, arguments);\n                    };\n                  }(), Promise.resolve({\n                    errors: {},\n                    values: {}\n                  }));\n\n                case 18:\n                  _ref44 = _context9.sent;\n                  _errors2 = _ref44.errors;\n                  _values = _ref44.values;\n                  fieldErrors = _errors2;\n                  fieldValues = _values;\n\n                case 23:\n                  if (!isEmptyObject(fieldErrors)) {\n                    _context9.next = 29;\n                    break;\n                  }\n\n                  errorsRef.current = {};\n                  _context9.next = 27;\n                  return callback(transformToNestObject(fieldValues), e);\n\n                case 27:\n                  _context9.next = 31;\n                  break;\n\n                case 29:\n                  if (submitFocusError && isWeb) {\n                    focusErrorField(fields, fieldErrors);\n                  }\n\n                  errorsRef.current = fieldErrors;\n\n                case 31:\n                  _context9.prev = 31;\n                  isSubmittedRef.current = true;\n                  isSubmittingRef.current = false;\n                  submitCountRef.current = submitCountRef.current + 1;\n                  reRender();\n                  return _context9.finish(31);\n\n                case 37:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9, null, [[3,, 31, 37]]);\n        }));\n\n        return function (_x18) {\n          return _ref42.apply(this, arguments);\n        };\n      }()\n    );\n  }, [isWeb, reRender, shouldValidateCallback, submitFocusError, validateAllFieldCriteria, validationContext, validationResolver, validationSchema]);\n\n  var resetRefs = function resetRefs() {\n    errorsRef.current = {};\n    fieldsRef.current = {};\n    touchedFieldsRef.current = {};\n    validFieldsRef.current = new Set();\n    fieldsWithValidationRef.current = new Set();\n    defaultRenderValuesRef.current = {};\n    watchFieldsRef.current = new Set();\n    dirtyFieldsRef.current = new Set();\n    isWatchAllRef.current = false;\n    isSubmittedRef.current = false;\n    isDirtyRef.current = false;\n    isValidRef.current = true;\n    submitCountRef.current = 0;\n  };\n\n  var reset = function reset(values) {\n    if (isWeb) {\n      for (var _i = 0, _Object$values = Object.values(fieldsRef.current); _i < _Object$values.length; _i++) {\n        var value = _Object$values[_i];\n\n        if (value && isHTMLElement(value.ref) && value.ref.closest) {\n          try {\n            value.ref.closest('form').reset();\n            break;\n          } catch (_a) {}\n        }\n      }\n    }\n\n    if (values) {\n      defaultValuesRef.current = values;\n    }\n\n    Object.values(resetFieldArrayFunctionRef.current).forEach(function (resetFieldArray) {\n      return isFunction(resetFieldArray) && resetFieldArray();\n    });\n    resetRefs();\n    reRender();\n  };\n\n  var getValues = function getValues(payload) {\n    var fieldValues = getFieldsValues(fieldsRef.current);\n    return payload && payload.nest ? transformToNestObject(fieldValues) : fieldValues;\n  };\n\n  useEffect(function () {\n    return function () {\n      isUnMount.current = true;\n      fieldsRef.current && Object.values(fieldsRef.current).forEach(function (field) {\n        return removeFieldEventListenerAndRef(field, true);\n      });\n    };\n  }, [removeFieldEventListenerAndRef]);\n\n  if (!shouldValidateCallback) {\n    isValidRef.current = validFieldsRef.current.size >= fieldsWithValidationRef.current.size && isEmptyObject(errorsRef.current);\n  }\n\n  var formState = {\n    dirty: isDirtyRef.current,\n    dirtyFields: dirtyFieldsRef.current,\n    isSubmitted: isSubmittedRef.current,\n    submitCount: submitCountRef.current,\n    touched: touchedFieldsRef.current,\n    isSubmitting: isSubmittingRef.current,\n    isValid: isOnSubmit ? isSubmittedRef.current && isEmptyObject(errorsRef.current) : isValidRef.current\n  };\n  var control = Object.assign(Object.assign({\n    register: register,\n    unregister: unregister,\n    removeFieldEventListener: removeFieldEventListener,\n    getValues: getValues,\n    setValue: setValue,\n    triggerValidation: triggerValidation\n  }, shouldValidateCallback ? {\n    validateSchemaIsValid: validateSchemaIsValid\n  } : {}), {\n    formState: formState,\n    mode: {\n      isOnBlur: isOnBlur,\n      isOnSubmit: isOnSubmit\n    },\n    reValidateMode: {\n      isReValidateOnBlur: isReValidateOnBlur,\n      isReValidateOnSubmit: isReValidateOnSubmit\n    },\n    errorsRef: errorsRef,\n    touchedFieldsRef: touchedFieldsRef,\n    fieldsRef: fieldsRef,\n    resetFieldArrayFunctionRef: resetFieldArrayFunctionRef,\n    validFieldsRef: validFieldsRef,\n    fieldsWithValidationRef: fieldsWithValidationRef,\n    watchFieldArrayRef: watchFieldArrayRef,\n    fieldArrayNamesRef: fieldArrayNamesRef,\n    isDirtyRef: isDirtyRef,\n    readFormStateRef: readFormStateRef,\n    defaultValuesRef: defaultValuesRef\n  });\n  return {\n    watch: watch,\n    control: control,\n    handleSubmit: handleSubmit,\n    setValue: setValue,\n    triggerValidation: triggerValidation,\n    getValues: useCallback(getValues, []),\n    reset: useCallback(reset, []),\n    register: useCallback(register, [defaultValuesRef.current, defaultRenderValuesRef.current]),\n    unregister: useCallback(unregister, []),\n    clearError: useCallback(clearError, []),\n    setError: useCallback(setError, []),\n    errors: errorsRef.current,\n    formState: isProxyEnabled ? new Proxy(formState, {\n      get: function get(obj, prop) {\n        if (prop in obj) {\n          readFormStateRef.current[prop] = true;\n          return obj[prop];\n        }\n\n        return {};\n      }\n    }) : formState\n  };\n}\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\n\nvar FormGlobalContext = createContext(null);\n\nfunction useFormContext() {\n  return useContext(FormGlobalContext);\n}\n\nfunction FormContext(_a) {\n  var children = _a.children,\n      formState = _a.formState,\n      errors = _a.errors,\n      restMethods = __rest(_a, [\"children\", \"formState\", \"errors\"]);\n\n  return createElement(FormGlobalContext.Provider, {\n    value: Object.assign(Object.assign({}, restMethods), {\n      formState: formState,\n      errors: errors\n    })\n  }, children);\n}\n\nvar generateId = function generateId() {\n  var d = typeof performance === UNDEFINED ? Date.now() : performance.now() * 1000;\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = (Math.random() * 16 + d) % 16 | 0;\n    return (c == 'x' ? r : r & 0x3 | 0x8).toString(16);\n  });\n};\n\nvar appendId = function appendId(value, keyName) {\n  return Object.assign(Object.assign({}, isObject(value) ? value : {\n    value: value\n  }), _defineProperty({}, keyName, generateId()));\n};\n\nvar mapIds = function mapIds(data, keyName) {\n  return (isArray(data) ? data : []).map(function (value) {\n    return appendId(value, keyName);\n  });\n};\n\nvar removeArrayAt = function removeArrayAt(data, index) {\n  return isUndefined(index) ? [] : data.filter(function (_, i) {\n    return (isArray(index) ? index : [index]).indexOf(i) < 0;\n  });\n};\n\nvar moveArrayAt = function moveArrayAt(data, from, to) {\n  return isArray(data) ? data.splice(to, 0, data.splice(from, 1)[0]) : [];\n};\n\nvar swapArrayAt = function swapArrayAt(fields, indexA, indexB) {\n  var _ref46;\n\n  return isArray(fields) && (_ref46 = [fields[indexB], fields[indexA]], fields[indexA] = _ref46[0], fields[indexB] = _ref46[1], _ref46);\n};\n\nvar prependAt = function prependAt(data, value) {\n  return [].concat(_toConsumableArray(isArray(value) ? value : [value || null]), _toConsumableArray(data));\n};\n\nvar insertAt = function insertAt(data, index, value) {\n  return [].concat(_toConsumableArray(data.slice(0, index)), _toConsumableArray(isArray(value) ? value : [value || null]), _toConsumableArray(data.slice(index)));\n};\n\nvar fillEmptyArray = function fillEmptyArray(value) {\n  return isArray(value) ? Array(value.length).fill(null) : undefined;\n};\n\nvar useEffect$1 = React.useEffect,\n    useRef$1 = React.useRef,\n    useState$1 = React.useState;\n\nvar useFieldArray = function useFieldArray(_ref47) {\n  var control = _ref47.control,\n      name = _ref47.name,\n      _ref47$keyName = _ref47.keyName,\n      keyName = _ref47$keyName === void 0 ? 'id' : _ref47$keyName;\n  var methods = useFormContext();\n\n  var _ref48 = control || methods.control,\n      resetFieldArrayFunctionRef = _ref48.resetFieldArrayFunctionRef,\n      fieldArrayNamesRef = _ref48.fieldArrayNamesRef,\n      fieldsRef = _ref48.fieldsRef,\n      getValues = _ref48.getValues,\n      defaultValuesRef = _ref48.defaultValuesRef,\n      removeFieldEventListener = _ref48.removeFieldEventListener,\n      errorsRef = _ref48.errorsRef,\n      isDirtyRef = _ref48.isDirtyRef,\n      touchedFieldsRef = _ref48.touchedFieldsRef,\n      readFormStateRef = _ref48.readFormStateRef,\n      watchFieldArrayRef = _ref48.watchFieldArrayRef,\n      validFieldsRef = _ref48.validFieldsRef,\n      fieldsWithValidationRef = _ref48.fieldsWithValidationRef,\n      validateSchemaIsValid = _ref48.validateSchemaIsValid;\n\n  var memoizedDefaultValues = useRef$1(get(defaultValuesRef.current, name, []));\n\n  var _useState$ = useState$1(mapIds(memoizedDefaultValues.current, keyName)),\n      _useState$2 = _slicedToArray(_useState$, 2),\n      fields = _useState$2[0],\n      setField = _useState$2[1];\n\n  var appendValueWithKey = function appendValueWithKey(value) {\n    return value.map(function (v) {\n      return appendId(v, keyName);\n    });\n  };\n\n  var commonTasks = function commonTasks(fieldsValues) {\n    watchFieldArrayRef.current[name] = fieldsValues;\n    setField(fieldsValues);\n\n    if (readFormStateRef.current.isValid && validateSchemaIsValid) {\n      validateSchemaIsValid(_defineProperty({}, name, fieldsValues));\n    }\n  };\n\n  var resetFields = function resetFields(flagOrFields) {\n    if (readFormStateRef.current.dirty) {\n      isDirtyRef.current = isUndefined(flagOrFields) ? true : getIsFieldsDifferent(flagOrFields, memoizedDefaultValues.current);\n    }\n\n    for (var key in fieldsRef.current) {\n      if (isMatchFieldArrayName(key, name) && fieldsRef.current[key]) {\n        removeFieldEventListener(fieldsRef.current[key], true);\n      }\n    }\n  };\n\n  var mapCurrentFieldsValueWithState = function mapCurrentFieldsValueWithState() {\n    var currentFieldsValue = getValues({\n      nest: true\n    })[name];\n\n    if (isArray(currentFieldsValue)) {\n      for (var i = 0; i < currentFieldsValue.length; i++) {\n        fields[i] = Object.assign(Object.assign({}, fields[i]), currentFieldsValue[i]);\n      }\n    }\n  };\n\n  var append = function append(value) {\n    mapCurrentFieldsValueWithState();\n\n    if (readFormStateRef.current.dirty) {\n      isDirtyRef.current = true;\n    }\n\n    commonTasks([].concat(_toConsumableArray(fields), _toConsumableArray(isArray(value) ? appendValueWithKey(value) : [appendId(value, keyName)])));\n  };\n\n  var prepend = function prepend(value) {\n    mapCurrentFieldsValueWithState();\n    resetFields();\n    commonTasks(prependAt(fields, isArray(value) ? appendValueWithKey(value) : [appendId(value, keyName)]));\n\n    if (errorsRef.current[name]) {\n      errorsRef.current[name] = prependAt(errorsRef.current[name], fillEmptyArray(value));\n    }\n\n    if (readFormStateRef.current.touched && touchedFieldsRef.current[name]) {\n      touchedFieldsRef.current[name] = prependAt(touchedFieldsRef.current[name], fillEmptyArray(value));\n    }\n  };\n\n  var remove = function remove(index) {\n    if (!isUndefined(index)) {\n      mapCurrentFieldsValueWithState();\n    }\n\n    resetFields(removeArrayAt(getFieldValueByName(fieldsRef.current, name), index));\n    commonTasks(removeArrayAt(fields, index));\n\n    if (errorsRef.current[name]) {\n      errorsRef.current[name] = removeArrayAt(errorsRef.current[name], index);\n    }\n\n    if (readFormStateRef.current.touched && touchedFieldsRef.current[name]) {\n      touchedFieldsRef.current[name] = removeArrayAt(touchedFieldsRef.current[name], index);\n    }\n\n    if (readFormStateRef.current.isValid && !validateSchemaIsValid) {\n      fields.forEach(function (field, fieldIndex) {\n        if (isUndefined(index) || fieldIndex === index || isArray(index) && index.indexOf(fieldIndex) >= 0) {\n          for (var key in field) {\n            var removeFieldName = \"\".concat(name, \"[\").concat(index, \"].\").concat(key);\n            validFieldsRef.current.delete(removeFieldName);\n            fieldsWithValidationRef.current.delete(removeFieldName);\n          }\n        }\n      });\n    }\n  };\n\n  var insert = function insert(index, value) {\n    mapCurrentFieldsValueWithState();\n    resetFields(insertAt(getFieldValueByName(fieldsRef.current, name), index));\n    commonTasks(insertAt(fields, index, isArray(value) ? appendValueWithKey(value) : [appendId(value, keyName)]));\n\n    if (errorsRef.current[name]) {\n      errorsRef.current[name] = insertAt(errorsRef.current[name], index, fillEmptyArray(value));\n    }\n\n    if (readFormStateRef.current.touched && touchedFieldsRef.current[name]) {\n      touchedFieldsRef.current[name] = insertAt(touchedFieldsRef.current[name], index, fillEmptyArray(value));\n    }\n  };\n\n  var swap = function swap(indexA, indexB) {\n    mapCurrentFieldsValueWithState();\n    var fieldValues = getFieldValueByName(fieldsRef.current, name);\n    swapArrayAt(fieldValues, indexA, indexB);\n    resetFields(fieldValues);\n    swapArrayAt(fields, indexA, indexB);\n    commonTasks(_toConsumableArray(fields));\n\n    if (errorsRef.current[name]) {\n      swapArrayAt(errorsRef.current[name], indexA, indexB);\n    }\n\n    if (readFormStateRef.current.touched && touchedFieldsRef.current[name]) {\n      swapArrayAt(touchedFieldsRef.current[name], indexA, indexB);\n    }\n  };\n\n  var move = function move(from, to) {\n    mapCurrentFieldsValueWithState();\n    var fieldValues = getFieldValueByName(fieldsRef.current, name);\n    moveArrayAt(fieldValues, from, to);\n    resetFields(fieldValues);\n    moveArrayAt(fields, from, to);\n    commonTasks(_toConsumableArray(fields));\n\n    if (errorsRef.current[name]) {\n      moveArrayAt(errorsRef.current[name], from, to);\n    }\n\n    if (readFormStateRef.current.touched && touchedFieldsRef.current[name]) {\n      moveArrayAt(touchedFieldsRef.current[name], from, to);\n    }\n  };\n\n  var reset = function reset() {\n    resetFields();\n    memoizedDefaultValues.current = get(defaultValuesRef.current, name, []);\n    setField(mapIds(memoizedDefaultValues.current, keyName));\n  };\n\n  useEffect$1(function () {\n    var resetFunctions = resetFieldArrayFunctionRef.current;\n    var fieldArrayNames = fieldArrayNamesRef.current;\n    fieldArrayNames.add(name);\n    resetFunctions[name] = reset;\n    watchFieldArrayRef.current[name] = {};\n    return function () {\n      resetFields();\n      delete resetFunctions[name];\n      fieldArrayNames.delete(name);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return {\n    swap: swap,\n    move: move,\n    prepend: prepend,\n    append: append,\n    remove: remove,\n    insert: insert,\n    fields: fields\n  };\n};\n\nvar getInputValue = function getInputValue(target, isCheckbox) {\n  if (isNullOrUndefined(target)) {\n    return target;\n  }\n\n  return isCheckbox ? isUndefined(target.checked) ? target : target.checked : isUndefined(target.value) ? target : target.value;\n};\n\nvar Controller = function Controller(_a) {\n  var name = _a.name,\n      rules = _a.rules,\n      InnerComponent = _a.as,\n      onBlur = _a.onBlur,\n      onChange = _a.onChange,\n      _a$onChangeName = _a.onChangeName,\n      onChangeName = _a$onChangeName === void 0 ? VALIDATION_MODE.onChange : _a$onChangeName,\n      _a$onBlurName = _a.onBlurName,\n      onBlurName = _a$onBlurName === void 0 ? VALIDATION_MODE.onBlur : _a$onBlurName,\n      valueName = _a.valueName,\n      defaultValue = _a.defaultValue,\n      control = _a.control,\n      rest = __rest(_a, [\"name\", \"rules\", \"as\", \"onBlur\", \"onChange\", \"onChangeName\", \"onBlurName\", \"valueName\", \"defaultValue\", \"control\"]);\n\n  var methods = useFormContext();\n\n  var _ref49 = control || methods.control,\n      defaultValuesRef = _ref49.defaultValuesRef,\n      setValue = _ref49.setValue,\n      register = _ref49.register,\n      unregister = _ref49.unregister,\n      errorsRef = _ref49.errorsRef,\n      removeFieldEventListener = _ref49.removeFieldEventListener,\n      triggerValidation = _ref49.triggerValidation,\n      _ref49$mode = _ref49.mode,\n      isOnSubmit = _ref49$mode.isOnSubmit,\n      isOnBlur = _ref49$mode.isOnBlur,\n      _ref49$reValidateMode = _ref49.reValidateMode,\n      isReValidateOnBlur = _ref49$reValidateMode.isReValidateOnBlur,\n      isReValidateOnSubmit = _ref49$reValidateMode.isReValidateOnSubmit,\n      isSubmitted = _ref49.formState.isSubmitted,\n      fieldsRef = _ref49.fieldsRef,\n      fieldArrayNamesRef = _ref49.fieldArrayNamesRef;\n\n  var _useState$3 = useState$2(isUndefined(defaultValue) ? get(defaultValuesRef.current, name) : defaultValue),\n      _useState$4 = _slicedToArray(_useState$3, 2),\n      value = _useState$4[0],\n      setInputStateValue = _useState$4[1];\n\n  var valueRef = useRef$2(value);\n  var isCheckboxInput = isBoolean(value);\n\n  var shouldValidate = function shouldValidate() {\n    return !skipValidation({\n      hasError: !!get(errorsRef.current, name),\n      isOnBlur: isOnBlur,\n      isOnSubmit: isOnSubmit,\n      isReValidateOnBlur: isReValidateOnBlur,\n      isReValidateOnSubmit: isReValidateOnSubmit,\n      isSubmitted: isSubmitted\n    });\n  };\n\n  var commonTask = function commonTask(target) {\n    var data = getInputValue(target, isCheckboxInput);\n    setInputStateValue(data);\n    valueRef.current = data;\n    return data;\n  };\n\n  var eventWrapper = function eventWrapper(event) {\n    return function () {\n      for (var _len = arguments.length, arg = new Array(_len), _key = 0; _key < _len; _key++) {\n        arg[_key] = arguments[_key];\n      }\n\n      return setValue(name, commonTask(event(arg)), shouldValidate());\n    };\n  };\n\n  var handleChange = function handleChange(e) {\n    var data = commonTask(e && e.target ? e.target : e);\n    setValue(name, data, shouldValidate());\n  };\n\n  var registerField = function registerField() {\n    if (isNameInFieldArray(fieldArrayNamesRef.current, name) && fieldsRef.current[name]) {\n      removeFieldEventListener(fieldsRef.current[name], true);\n    }\n\n    register(Object.defineProperty({\n      name: name\n    }, VALUE, {\n      set: function set(data) {\n        setInputStateValue(data);\n        valueRef.current = data;\n      },\n      get: function get() {\n        return valueRef.current;\n      }\n    }), Object.assign({}, rules));\n  };\n\n  if (!fieldsRef.current[name]) {\n    registerField();\n  }\n\n  useEffect$2(function () {\n    registerField();\n    return function () {\n      if (!isNameInFieldArray(fieldArrayNamesRef.current, name)) {\n        unregister(name);\n      }\n    };\n  }, [name]);\n  var shouldReValidateOnBlur = isOnBlur || isReValidateOnBlur;\n  var props = Object.assign(Object.assign(Object.assign(Object.assign({\n    name: name\n  }, rest), onChange ? _defineProperty({}, onChangeName, eventWrapper(onChange)) : _defineProperty({}, onChangeName, handleChange)), onBlur || shouldReValidateOnBlur ? _defineProperty({}, onBlurName, function () {\n    if (onBlur) {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      onBlur(args);\n    }\n\n    if (shouldReValidateOnBlur) {\n      triggerValidation(name);\n    }\n  }) : {}), _defineProperty({}, valueName || (isCheckboxInput ? 'checked' : VALUE), value));\n  return isValidElement(InnerComponent) ? cloneElement(InnerComponent, props) : createElement(InnerComponent, Object.assign({}, props));\n};\n\nvar ErrorMessage = function ErrorMessage(_a) {\n  var InnerComponent = _a.as,\n      errors = _a.errors,\n      name = _a.name,\n      message = _a.message,\n      children = _a.children,\n      rest = __rest(_a, [\"as\", \"errors\", \"name\", \"message\", \"children\"]);\n\n  var methods = useFormContext();\n  var error = get(errors || methods.errors, name);\n\n  if (!error) {\n    return null;\n  }\n\n  var messageFromRegister = error.message,\n      types = error.types;\n  var props = Object.assign(Object.assign({}, InnerComponent ? rest : {}), {\n    children: children ? children({\n      message: messageFromRegister || message,\n      messages: types\n    }) : messageFromRegister || message\n  });\n  return InnerComponent ? isValidElement(InnerComponent) ? cloneElement(InnerComponent, props) : createElement(InnerComponent, props) : createElement(Fragment, Object.assign({}, props));\n};\n\nexport { Controller, ErrorMessage, FormContext, useFieldArray, useForm, useFormContext };","map":{"version":3,"sources":["/home/snw/Documentos/React projects/fbs/node_modules/react-hook-form/dist/react-hook-form.es.js"],"names":["React","createContext","useContext","createElement","useState","useState$2","useRef","useRef$2","useEffect","useEffect$2","isValidElement","cloneElement","Fragment","isUndefined","val","undefined","isNullOrUndefined","value","isArray","Array","isObjectType","isObject","isHTMLElement","nodeType","Node","ELEMENT_NODE","VALIDATION_MODE","onBlur","onChange","onSubmit","VALUE","UNDEFINED","EVENTS","BLUR","CHANGE","INPUT","INPUT_VALIDATION_RULES","max","min","maxLength","minLength","pattern","required","validate","REGEX_IS_DEEP_PROP","REGEX_IS_PLAIN_PROP","REGEX_PROP_NAME","REGEX_ESCAPE_CHAR","attachEventListeners","field","handleChange","isRadioOrCheckbox","ref","addEventListener","isKey","test","stringToPath","string","result","replace","match","number","quote","push","set","object","path","index","tempPath","length","lastIndex","key","newValue","objValue","isNaN","transformToNestObject","data","Object","entries","reduce","previous","assign","get","obj","defaultValue","split","filter","Boolean","focusErrorField","fields","fieldErrors","focus","options","removeAllEventListeners","validateWithStateUpdate","removeEventListener","isRadioInput","element","type","isCheckBoxInput","isDetached","HTMLElement","DOCUMENT_NODE","parentNode","findRemovedFieldAndRemoveListener","forceDelete","name","mutationWatcher","fieldValue","forEach","disconnect","splice","defaultReturn","isValid","getRadioValue","checked","getMultipleSelectValue","selected","map","isFileInput","isMultipleSelect","isEmptyString","defaultResult","validResult","getCheckboxValue","values","attributes","getFieldValue","files","isString","getFieldsValues","search","output","isSearchString","isSearchArray","isNest","nest","startsWith","find","isEmptyObject","keys","compareObject","objectA","objectB","isSameError","error","types","message","shouldUpdateWithError","errors","validFields","fieldsWithValidation","isFieldValid","isFormValid","currentFieldError","existFieldError","has","isManual","isRegex","RegExp","getValueAndMessage","validationData","isPureObject","isFunction","isBoolean","getValidateError","isStringValue","appendErrors","validateAllFieldCriteria","validateField","fieldsRef","current","isRadio","isCheckBox","isEmpty","appendErrorsCurry","bind","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","maxValue","maxMessage","minValue","minMessage","valueNumber","valueAsNumber","parseFloat","exceedMin","valueDate","valueAsDate","Date","maxLengthValue","minLengthValue","inputLength","toString","patternValue","patternMessage","validateRef","validateError","validateFunctions","Promise","resolve","validateResult","validationResult","parseErrorSchema","inner","validateWithSchema","validationSchema","validationResolver","context","abortEarly","getDefaultValue","defaultValues","flatArray","list","a","b","concat","isPrimitive","getPath","getInnerPath","pathWithIndex","getPath$1","parentPath","assignWatchFields","fieldValues","fieldName","watchFields","combinedDefaultValues","watchFieldArray","add","skipValidation","hasError","isBlurEvent","isOnSubmit","isReValidateOnSubmit","isOnBlur","isReValidateOnBlur","isSubmitted","getFieldValueByName","results","getIsFieldsDifferent","referenceArray","differenceArray","isMatch","i","dataA","dataB","isMatchFieldArrayName","searchName","isNameInFieldArray","names","prev","isFileListObject","FileList","onDomRemove","onDetachCallback","observer","MutationObserver","observe","window","document","childList","subtree","castPath","baseGet","updatePath","baseSlice","array","start","end","parent","baseUnset","unset","paths","modeChecker","mode","isOnChange","useCallback","useForm","reValidateMode","validationContext","submitFocusError","validateCriteriaMode","errorsRef","touchedFieldsRef","watchFieldArrayRef","watchFieldsRef","Set","dirtyFieldsRef","fieldsWithValidationRef","validFieldsRef","isValidRef","defaultRenderValuesRef","defaultValuesRef","isUnMount","isWatchAllRef","isSubmittedRef","isDirtyRef","submitCountRef","isSubmittingRef","handleChangeRef","resetFieldArrayFunctionRef","fieldArrayNamesRef","render","isWindowUndefined","shouldValidateCallback","isWeb","isProxyEnabled","readFormStateRef","dirty","dirtyFields","submitCount","touched","isSubmitting","reRender","shouldRenderBaseOnError","shouldRender","skipReRender","shouldReRender","delete","setFieldValue","rawValue","radioRef","selectRef","includes","checkboxRef","setDirty","isFieldArray","previousDirtyFieldsLength","size","isDirty","fieldArrayName","substring","indexOf","isDirtyChanged","setInternalValue","executeValidation","executeSchemaValidation","payload","previousFormIsValid","triggerValidation","all","every","isFieldWatched","setValue","shouldValidate","target","currentError","shouldSkipValidation","shouldUpdateDirty","shouldUpdateState","validateSchemaIsValid","then","removeFieldEventListener","removeFieldEventListenerAndRef","clearError","setInternalError","preventRender","setError","watch","fieldNames","unregister","registerFieldsRef","validateOptions","console","warn","fieldAttributes","currentField","isEmptyDefaultValue","fieldToAttachListener","register","refOrValidationOptions","validationOptions","handleSubmit","callback","e","preventDefault","persist","resolvedPrevious","fieldError","resetRefs","reset","closest","_a","resetFieldArray","getValues","formState","control","Proxy","prop","__rest","s","t","p","prototype","hasOwnProperty","call","getOwnPropertySymbols","propertyIsEnumerable","FormGlobalContext","useFormContext","FormContext","children","restMethods","Provider","generateId","d","performance","now","c","r","Math","random","appendId","keyName","mapIds","removeArrayAt","_","moveArrayAt","from","to","swapArrayAt","indexA","indexB","prependAt","insertAt","slice","fillEmptyArray","fill","useEffect$1","useRef$1","useState$1","useFieldArray","methods","memoizedDefaultValues","setField","appendValueWithKey","v","commonTasks","fieldsValues","resetFields","flagOrFields","mapCurrentFieldsValueWithState","currentFieldsValue","append","prepend","remove","fieldIndex","removeFieldName","insert","swap","move","resetFunctions","fieldArrayNames","getInputValue","isCheckbox","Controller","rules","InnerComponent","as","onChangeName","onBlurName","valueName","rest","setInputStateValue","valueRef","isCheckboxInput","commonTask","eventWrapper","event","arg","registerField","defineProperty","shouldReValidateOnBlur","props","args","ErrorMessage","messageFromRegister","messages"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { createContext, useContext, createElement, useState as useState$2, useRef as useRef$2, useEffect as useEffect$2, isValidElement, cloneElement, Fragment } from 'react';\n\nvar isUndefined = (val) => val === undefined;\n\nvar isNullOrUndefined = (value) => value === null || isUndefined(value);\n\nvar isArray = (value) => Array.isArray(value);\n\nconst isObjectType = (value) => typeof value === 'object';\r\nvar isObject = (value) => !isNullOrUndefined(value) && !isArray(value) && isObjectType(value);\n\nvar isHTMLElement = (value) => isObject(value) && value.nodeType === Node.ELEMENT_NODE;\n\nconst VALIDATION_MODE = {\r\n    onBlur: 'onBlur',\r\n    onChange: 'onChange',\r\n    onSubmit: 'onSubmit',\r\n};\r\nconst VALUE = 'value';\r\nconst UNDEFINED = 'undefined';\r\nconst EVENTS = {\r\n    BLUR: 'blur',\r\n    CHANGE: 'change',\r\n    INPUT: 'input',\r\n};\r\nconst INPUT_VALIDATION_RULES = {\r\n    max: 'max',\r\n    min: 'min',\r\n    maxLength: 'maxLength',\r\n    minLength: 'minLength',\r\n    pattern: 'pattern',\r\n    required: 'required',\r\n    validate: 'validate',\r\n};\r\nconst REGEX_IS_DEEP_PROP = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/;\r\nconst REGEX_IS_PLAIN_PROP = /^\\w*$/;\r\nconst REGEX_PROP_NAME = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\r\nconst REGEX_ESCAPE_CHAR = /\\\\(\\\\)?/g;\n\nfunction attachEventListeners({ field, handleChange, isRadioOrCheckbox, }) {\r\n    const { ref } = field;\r\n    if (isHTMLElement(ref) && ref.addEventListener && handleChange) {\r\n        ref.addEventListener(isRadioOrCheckbox ? EVENTS.CHANGE : EVENTS.INPUT, handleChange);\r\n        ref.addEventListener(EVENTS.BLUR, handleChange);\r\n    }\r\n}\n\nvar isKey = (value) => !isArray(value) &&\r\n    (REGEX_IS_PLAIN_PROP.test(value) || !REGEX_IS_DEEP_PROP.test(value));\n\nconst stringToPath = (string) => {\r\n    const result = [];\r\n    string.replace(REGEX_PROP_NAME, (match, number, quote, string) => {\r\n        result.push(quote ? string.replace(REGEX_ESCAPE_CHAR, '$1') : number || match);\r\n    });\r\n    return result;\r\n};\r\nfunction set(object, path, value) {\r\n    let index = -1;\r\n    const tempPath = isKey(path) ? [path] : stringToPath(path);\r\n    const length = tempPath.length;\r\n    const lastIndex = length - 1;\r\n    while (++index < length) {\r\n        const key = tempPath[index];\r\n        let newValue = value;\r\n        if (index !== lastIndex) {\r\n            const objValue = object[key];\r\n            newValue =\r\n                isObject(objValue) || isArray(objValue)\r\n                    ? objValue\r\n                    : !isNaN(tempPath[index + 1])\r\n                        ? []\r\n                        : {};\r\n        }\r\n        object[key] = newValue;\r\n        object = object[key];\r\n    }\r\n    return object;\r\n}\n\nvar transformToNestObject = (data) => Object.entries(data).reduce((previous, [key, value]) => {\r\n    if (!isKey(key)) {\r\n        set(previous, key, value);\r\n        return previous;\r\n    }\r\n    return Object.assign(Object.assign({}, previous), { [key]: value });\r\n}, {});\n\nvar get = (obj, path, defaultValue) => {\r\n    const result = path\r\n        .split(/[,[\\].]+?/)\r\n        .filter(Boolean)\r\n        .reduce((result, key) => (isNullOrUndefined(result) ? result : result[key]), obj);\r\n    return isUndefined(result) || result === obj\r\n        ? obj[path] || defaultValue\r\n        : result;\r\n};\n\nvar focusErrorField = (fields, fieldErrors) => {\r\n    for (const key in fields) {\r\n        if (get(fieldErrors, key)) {\r\n            const field = fields[key];\r\n            if (field) {\r\n                if (isHTMLElement(field.ref) && field.ref.focus) {\r\n                    field.ref.focus();\r\n                    break;\r\n                }\r\n                else if (field.options) {\r\n                    field.options[0].ref.focus();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\n\nvar removeAllEventListeners = (ref, validateWithStateUpdate) => {\r\n    if (isHTMLElement(ref) && ref.removeEventListener) {\r\n        ref.removeEventListener(EVENTS.INPUT, validateWithStateUpdate);\r\n        ref.removeEventListener(EVENTS.CHANGE, validateWithStateUpdate);\r\n        ref.removeEventListener(EVENTS.BLUR, validateWithStateUpdate);\r\n    }\r\n};\n\nvar isRadioInput = (element) => !!element && element.type === 'radio';\n\nvar isCheckBoxInput = (element) => !!element && element.type === 'checkbox';\n\nfunction isDetached(element) {\r\n    if (!element) {\r\n        return true;\r\n    }\r\n    if (!(element instanceof HTMLElement) ||\r\n        element.nodeType === Node.DOCUMENT_NODE) {\r\n        return false;\r\n    }\r\n    return isDetached(element.parentNode);\r\n}\n\nfunction findRemovedFieldAndRemoveListener(fields, handleChange, field, forceDelete) {\r\n    if (!field) {\r\n        return;\r\n    }\r\n    const { ref, ref: { name, type }, mutationWatcher, } = field;\r\n    if (!type) {\r\n        delete fields[name];\r\n        return;\r\n    }\r\n    const fieldValue = fields[name];\r\n    if ((isRadioInput(ref) || isCheckBoxInput(ref)) && fieldValue) {\r\n        const { options } = fieldValue;\r\n        if (isArray(options) && options.length) {\r\n            options.forEach(({ ref, mutationWatcher }, index) => {\r\n                if ((ref && isDetached(ref)) || forceDelete) {\r\n                    removeAllEventListeners(ref, handleChange);\r\n                    if (mutationWatcher) {\r\n                        mutationWatcher.disconnect();\r\n                    }\r\n                    options.splice(index, 1);\r\n                }\r\n            });\r\n            if (options && !options.length) {\r\n                delete fields[name];\r\n            }\r\n        }\r\n        else {\r\n            delete fields[name];\r\n        }\r\n    }\r\n    else if (isDetached(ref) || forceDelete) {\r\n        removeAllEventListeners(ref, handleChange);\r\n        if (mutationWatcher) {\r\n            mutationWatcher.disconnect();\r\n        }\r\n        delete fields[name];\r\n    }\r\n}\n\nconst defaultReturn = {\r\n    isValid: false,\r\n    value: '',\r\n};\r\nvar getRadioValue = (options) => isArray(options)\r\n    ? options.reduce((previous, { ref: { checked, value } }) => checked\r\n        ? {\r\n            isValid: true,\r\n            value,\r\n        }\r\n        : previous, defaultReturn)\r\n    : defaultReturn;\n\nvar getMultipleSelectValue = (options) => [...options]\r\n    .filter(({ selected }) => selected)\r\n    .map(({ value }) => value);\n\nvar isFileInput = (element) => !!element && element.type === 'file';\n\nvar isMultipleSelect = (element) => !!element && element.type === 'select-multiple';\n\nvar isEmptyString = (value) => value === '';\n\nconst defaultResult = {\r\n    value: false,\r\n    isValid: false,\r\n};\r\nconst validResult = { value: true, isValid: true };\r\nvar getCheckboxValue = (options) => {\r\n    if (isArray(options)) {\r\n        if (options.length > 1) {\r\n            const values = options\r\n                .filter(({ ref: { checked } }) => checked)\r\n                .map(({ ref: { value } }) => value);\r\n            return { value: values, isValid: !!values.length };\r\n        }\r\n        const { checked, value, attributes } = options[0].ref;\r\n        return checked\r\n            ? attributes && !isUndefined(attributes.value)\r\n                ? isUndefined(value) || isEmptyString(value)\r\n                    ? validResult\r\n                    : { value: value, isValid: true }\r\n                : validResult\r\n            : defaultResult;\r\n    }\r\n    return defaultResult;\r\n};\n\nfunction getFieldValue(fields, ref) {\r\n    const { name, value } = ref;\r\n    const field = fields[name];\r\n    if (isFileInput(ref)) {\r\n        return ref.files;\r\n    }\r\n    if (isRadioInput(ref)) {\r\n        return field ? getRadioValue(field.options).value : '';\r\n    }\r\n    if (isMultipleSelect(ref)) {\r\n        return getMultipleSelectValue(ref.options);\r\n    }\r\n    if (isCheckBoxInput(ref)) {\r\n        return field ? getCheckboxValue(field.options).value : false;\r\n    }\r\n    return value;\r\n}\n\nvar isString = (value) => typeof value === 'string';\n\nvar getFieldsValues = (fields, search) => {\r\n    const output = {};\r\n    const isSearchString = isString(search);\r\n    const isSearchArray = isArray(search);\r\n    const isNest = search && search.nest;\r\n    for (const name in fields) {\r\n        if (isUndefined(search) ||\r\n            isNest ||\r\n            (isSearchString && name.startsWith(search)) ||\r\n            (isSearchArray &&\r\n                search.find((data) => name.startsWith(data)))) {\r\n            output[name] = getFieldValue(fields, fields[name].ref);\r\n        }\r\n    }\r\n    return output;\r\n};\n\nvar isEmptyObject = (value) => isObject(value) && !Object.keys(value).length;\n\nvar compareObject = (objectA = {}, objectB = {}) => Object.entries(objectA).reduce((previous, [key, value]) => previous ? objectB[key] && objectB[key] === value : false, true);\n\nvar isSameError = (error, { type, types, message, }) => {\r\n    return (isObject(error) &&\r\n        error.type === type &&\r\n        error.message === message &&\r\n        compareObject(error.types, types));\r\n};\n\nfunction shouldUpdateWithError({ errors, name, error, validFields, fieldsWithValidation, }) {\r\n    const isFieldValid = isEmptyObject(error);\r\n    const isFormValid = isEmptyObject(errors);\r\n    const currentFieldError = get(error, name);\r\n    const existFieldError = get(errors, name);\r\n    if ((isFieldValid && validFields.has(name)) ||\r\n        (existFieldError && existFieldError.isManual)) {\r\n        return false;\r\n    }\r\n    if (isFormValid !== isFieldValid ||\r\n        (!isFormValid && !existFieldError) ||\r\n        (isFieldValid && fieldsWithValidation.has(name) && !validFields.has(name))) {\r\n        return true;\r\n    }\r\n    return currentFieldError && !isSameError(existFieldError, currentFieldError);\r\n}\n\nvar isRegex = (value) => value instanceof RegExp;\n\nvar getValueAndMessage = (validationData) => {\r\n    const isPureObject = isObject(validationData) && !isRegex(validationData);\r\n    return {\r\n        value: isPureObject\r\n            ? validationData.value\r\n            : validationData,\r\n        message: isPureObject\r\n            ? validationData.message\r\n            : '',\r\n    };\r\n};\n\nvar isFunction = (value) => typeof value === 'function';\n\nvar isBoolean = (value) => typeof value === 'boolean';\n\nfunction getValidateError(result, ref, type = 'validate') {\r\n    const isStringValue = isString(result);\r\n    if (isStringValue || (isBoolean(result) && !result)) {\r\n        const message = isStringValue ? result : '';\r\n        return {\r\n            type,\r\n            message,\r\n            ref,\r\n        };\r\n    }\r\n}\n\nvar appendErrors = (name, validateAllFieldCriteria, errors, type, message) => {\r\n    if (!validateAllFieldCriteria) {\r\n        return {};\r\n    }\r\n    const error = errors[name];\r\n    return Object.assign(Object.assign({}, error), { types: Object.assign(Object.assign({}, (error && error.types ? error.types : {})), { [type]: message || true }) });\r\n};\n\nvar validateField = async (fieldsRef, validateAllFieldCriteria, { ref, ref: { type, value, name }, options, required, maxLength, minLength, min, max, pattern, validate, }) => {\r\n    const fields = fieldsRef.current;\r\n    const error = {};\r\n    const isRadio = isRadioInput(ref);\r\n    const isCheckBox = isCheckBoxInput(ref);\r\n    const isRadioOrCheckbox = isRadio || isCheckBox;\r\n    const isEmpty = isEmptyString(value);\r\n    const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\r\n    const getMinMaxMessage = (exceedMax, maxLengthMessage, minLengthMessage, maxType = INPUT_VALIDATION_RULES.maxLength, minType = INPUT_VALIDATION_RULES.minLength) => {\r\n        const message = exceedMax ? maxLengthMessage : minLengthMessage;\r\n        error[name] = Object.assign({ type: exceedMax ? maxType : minType, message,\r\n            ref }, (exceedMax\r\n            ? appendErrorsCurry(maxType, message)\r\n            : appendErrorsCurry(minType, message)));\r\n        if (!validateAllFieldCriteria) {\r\n            return error;\r\n        }\r\n    };\r\n    if (required &&\r\n        ((!isRadio && !isCheckBox && (isEmpty || isNullOrUndefined(value))) ||\r\n            (isBoolean(value) && !value) ||\r\n            (isCheckBox && !getCheckboxValue(options).isValid) ||\r\n            (isRadio && !getRadioValue(options).isValid))) {\r\n        const message = isString(required)\r\n            ? required\r\n            : getValueAndMessage(required).message;\r\n        error[name] = Object.assign({ type: INPUT_VALIDATION_RULES.required, message, ref: isRadioOrCheckbox ? fields[name].options[0].ref : ref }, appendErrorsCurry(INPUT_VALIDATION_RULES.required, message));\r\n        if (!validateAllFieldCriteria) {\r\n            return error;\r\n        }\r\n    }\r\n    if (!isNullOrUndefined(min) || !isNullOrUndefined(max)) {\r\n        let exceedMax;\r\n        let exceedMin;\r\n        const { value: maxValue, message: maxMessage } = getValueAndMessage(max);\r\n        const { value: minValue, message: minMessage } = getValueAndMessage(min);\r\n        if (type === 'number' || (!type && !isNaN(value))) {\r\n            const valueNumber = ref.valueAsNumber || parseFloat(value);\r\n            if (!isNullOrUndefined(maxValue)) {\r\n                exceedMax = valueNumber > maxValue;\r\n            }\r\n            if (!isNullOrUndefined(minValue)) {\r\n                exceedMin = valueNumber < minValue;\r\n            }\r\n        }\r\n        else {\r\n            const valueDate = ref.valueAsDate || new Date(value);\r\n            if (isString(maxValue)) {\r\n                exceedMax = valueDate > new Date(maxValue);\r\n            }\r\n            if (isString(minValue)) {\r\n                exceedMin = valueDate < new Date(minValue);\r\n            }\r\n        }\r\n        if (exceedMax || exceedMin) {\r\n            getMinMaxMessage(!!exceedMax, maxMessage, minMessage, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\r\n            if (!validateAllFieldCriteria) {\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (isString(value) && !isEmpty && (maxLength || minLength)) {\r\n        const { value: maxLengthValue, message: maxLengthMessage, } = getValueAndMessage(maxLength);\r\n        const { value: minLengthValue, message: minLengthMessage, } = getValueAndMessage(minLength);\r\n        const inputLength = value.toString().length;\r\n        const exceedMax = maxLength && inputLength > maxLengthValue;\r\n        const exceedMin = minLength && inputLength < minLengthValue;\r\n        if (exceedMax || exceedMin) {\r\n            getMinMaxMessage(!!exceedMax, maxLengthMessage, minLengthMessage);\r\n            if (!validateAllFieldCriteria) {\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (pattern && !isEmpty) {\r\n        const { value: patternValue, message: patternMessage } = getValueAndMessage(pattern);\r\n        if (isRegex(patternValue) && !patternValue.test(value)) {\r\n            error[name] = Object.assign({ type: INPUT_VALIDATION_RULES.pattern, message: patternMessage, ref }, appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, patternMessage));\r\n            if (!validateAllFieldCriteria) {\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (validate) {\r\n        const fieldValue = getFieldValue(fields, ref);\r\n        const validateRef = isRadioOrCheckbox && options ? options[0].ref : ref;\r\n        if (isFunction(validate)) {\r\n            const result = await validate(fieldValue);\r\n            const validateError = getValidateError(result, validateRef);\r\n            if (validateError) {\r\n                error[name] = Object.assign(Object.assign({}, validateError), appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message));\r\n                if (!validateAllFieldCriteria) {\r\n                    return error;\r\n                }\r\n            }\r\n        }\r\n        else if (isObject(validate)) {\r\n            const validateFunctions = Object.entries(validate);\r\n            const validationResult = await new Promise((resolve) => {\r\n                validateFunctions.reduce(async (previous, [key, validate], index) => {\r\n                    if ((!isEmptyObject(await previous) && !validateAllFieldCriteria) ||\r\n                        !isFunction(validate)) {\r\n                        return resolve(previous);\r\n                    }\r\n                    let result;\r\n                    const validateResult = await validate(fieldValue);\r\n                    const validateError = getValidateError(validateResult, validateRef, key);\r\n                    if (validateError) {\r\n                        result = Object.assign(Object.assign({}, validateError), appendErrorsCurry(key, validateError.message));\r\n                        if (validateAllFieldCriteria) {\r\n                            error[name] = result;\r\n                        }\r\n                    }\r\n                    else {\r\n                        result = previous;\r\n                    }\r\n                    return validateFunctions.length - 1 === index\r\n                        ? resolve(result)\r\n                        : result;\r\n                }, {});\r\n            });\r\n            if (!isEmptyObject(validationResult)) {\r\n                error[name] = Object.assign({ ref: validateRef }, validationResult);\r\n                if (!validateAllFieldCriteria) {\r\n                    return error;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return error;\r\n};\n\nconst parseErrorSchema = (error, validateAllFieldCriteria) => isArray(error.inner)\r\n    ? error.inner.reduce((previous, { path, message, type }) => (Object.assign(Object.assign({}, previous), (previous[path] && validateAllFieldCriteria\r\n        ? {\r\n            [path]: appendErrors(path, validateAllFieldCriteria, previous, type, message),\r\n        }\r\n        : {\r\n            [path]: previous[path] || Object.assign({ message,\r\n                type }, (validateAllFieldCriteria\r\n                ? {\r\n                    types: { [type]: message || true },\r\n                }\r\n                : {})),\r\n        }))), {})\r\n    : {\r\n        [error.path]: { message: error.message, type: error.type },\r\n    };\r\nasync function validateWithSchema(validationSchema, validateAllFieldCriteria, data, validationResolver, context) {\r\n    if (validationResolver) {\r\n        return validationResolver(data, context);\r\n    }\r\n    try {\r\n        return {\r\n            values: await validationSchema.validate(data, {\r\n                abortEarly: false,\r\n                context,\r\n            }),\r\n            errors: {},\r\n        };\r\n    }\r\n    catch (e) {\r\n        return {\r\n            values: {},\r\n            errors: transformToNestObject(parseErrorSchema(e, validateAllFieldCriteria)),\r\n        };\r\n    }\r\n}\n\nvar getDefaultValue = (defaultValues, name, defaultValue) => isUndefined(defaultValues[name])\r\n    ? get(defaultValues, name, defaultValue)\r\n    : defaultValues[name];\n\nfunction flatArray(list) {\r\n    return list.reduce((a, b) => a.concat(isArray(b) ? flatArray(b) : b), []);\r\n}\n\nvar isPrimitive = (value) => isNullOrUndefined(value) || !isObjectType(value);\n\nconst getPath = (path, values) => {\r\n    const getInnerPath = (value, key, isObject) => {\r\n        const pathWithIndex = isObject ? `${path}.${key}` : `${path}[${key}]`;\r\n        return isPrimitive(value) ? pathWithIndex : getPath(pathWithIndex, value);\r\n    };\r\n    return isArray(values)\r\n        ? values.map((value, key) => getInnerPath(value, key))\r\n        : Object.entries(values).map(([key, value]) => getInnerPath(value, key, true));\r\n};\r\nvar getPath$1 = (parentPath, value) => flatArray(getPath(parentPath, value));\n\nvar assignWatchFields = (fieldValues, fieldName, watchFields, combinedDefaultValues, watchFieldArray) => {\r\n    let value;\r\n    watchFields.add(fieldName);\r\n    if (isEmptyObject(fieldValues)) {\r\n        value = watchFieldArray ? watchFieldArray : undefined;\r\n    }\r\n    else if (!isUndefined(fieldValues[fieldName])) {\r\n        value = fieldValues[fieldName];\r\n        watchFields.add(fieldName);\r\n    }\r\n    else {\r\n        value = get(transformToNestObject(fieldValues), fieldName);\r\n        if (isArray(watchFieldArray) &&\r\n            isArray(value) &&\r\n            value.length !== watchFieldArray.length) {\r\n            value = watchFieldArray;\r\n        }\r\n        if (!isUndefined(value)) {\r\n            getPath$1(fieldName, value).forEach(name => watchFields.add(name));\r\n        }\r\n    }\r\n    return isUndefined(value)\r\n        ? isObject(combinedDefaultValues)\r\n            ? getDefaultValue(combinedDefaultValues, fieldName)\r\n            : combinedDefaultValues\r\n        : value;\r\n};\n\nvar skipValidation = ({ hasError, isBlurEvent, isOnSubmit, isReValidateOnSubmit, isOnBlur, isReValidateOnBlur, isSubmitted, }) => (isOnSubmit && isReValidateOnSubmit) ||\r\n    (isOnSubmit && !isSubmitted) ||\r\n    (isOnBlur && !isBlurEvent && !hasError) ||\r\n    (isReValidateOnBlur && !isBlurEvent && hasError) ||\r\n    (isReValidateOnSubmit && isSubmitted);\n\nvar getFieldValueByName = (fields, name) => {\r\n    const results = transformToNestObject(getFieldsValues(fields));\r\n    return name ? get(results, name, results) : results;\r\n};\n\nfunction getIsFieldsDifferent(referenceArray, differenceArray) {\r\n    let isMatch = false;\r\n    if (!isArray(referenceArray) ||\r\n        !isArray(differenceArray) ||\r\n        referenceArray.length !== differenceArray.length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < referenceArray.length; i++) {\r\n        if (isMatch) {\r\n            break;\r\n        }\r\n        const dataA = referenceArray[i];\r\n        const dataB = differenceArray[i];\r\n        if (isUndefined(dataB) ||\r\n            Object.keys(dataA).length !== Object.keys(dataB).length) {\r\n            isMatch = true;\r\n            break;\r\n        }\r\n        for (const key in dataA) {\r\n            if (dataA[key] !== dataB[key]) {\r\n                isMatch = true;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return isMatch;\r\n}\n\nconst isMatchFieldArrayName = (name, searchName) => name.startsWith(`${searchName}[`);\r\nvar isNameInFieldArray = (names, name) => [...names].reduce((prev, current) => (isMatchFieldArrayName(name, current) ? true : prev), false);\n\nvar isFileListObject = (data) => typeof FileList !== UNDEFINED && data instanceof FileList;\n\nfunction onDomRemove(element, onDetachCallback) {\r\n    const observer = new MutationObserver(() => {\r\n        if (isDetached(element)) {\r\n            observer.disconnect();\r\n            onDetachCallback();\r\n        }\r\n    });\r\n    observer.observe(window.document, {\r\n        childList: true,\r\n        subtree: true,\r\n    });\r\n    return observer;\r\n}\n\nfunction castPath(value) {\r\n    return isArray(value) ? value : stringToPath(value);\r\n}\r\nfunction baseGet(object, path) {\r\n    const updatePath = isKey(path) ? [path] : castPath(path);\r\n    const length = path.length;\r\n    let index = 0;\r\n    while (index < length) {\r\n        object = isUndefined(object) ? index++ : object[updatePath[index++]];\r\n    }\r\n    return index == length ? object : undefined;\r\n}\r\nfunction baseSlice(array, start, end) {\r\n    let index = -1;\r\n    let length = array.length;\r\n    if (start < 0) {\r\n        start = -start > length ? 0 : length + start;\r\n    }\r\n    end = end > length ? length : end;\r\n    if (end < 0) {\r\n        end += length;\r\n    }\r\n    length = start > end ? 0 : end - start;\r\n    const result = Array(length);\r\n    while (++index < length) {\r\n        result[index] = array[index + start];\r\n    }\r\n    return result;\r\n}\r\nfunction parent(object, path) {\r\n    return path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\r\n}\r\nfunction baseUnset(object, path) {\r\n    const updatePath = isKey(path) ? [path] : castPath(path);\r\n    object = parent(object, updatePath);\r\n    const key = updatePath[updatePath.length - 1];\r\n    return !(object != null) || delete object[key];\r\n}\r\nfunction unset(object, paths) {\r\n    paths.forEach(path => {\r\n        baseUnset(object, path);\r\n    });\r\n    return object;\r\n}\n\nvar modeChecker = (mode) => ({\r\n    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\r\n    isOnBlur: mode === VALIDATION_MODE.onBlur,\r\n    isOnChange: mode === VALIDATION_MODE.onChange,\r\n});\n\nconst { useRef, useState, useCallback, useEffect } = React;\r\nfunction useForm({ mode = VALIDATION_MODE.onSubmit, reValidateMode = VALIDATION_MODE.onChange, validationSchema, validationResolver, validationContext, defaultValues = {}, submitFocusError = true, validateCriteriaMode, } = {}) {\r\n    const fieldsRef = useRef({});\r\n    const validateAllFieldCriteria = validateCriteriaMode === 'all';\r\n    const errorsRef = useRef({});\r\n    const touchedFieldsRef = useRef({});\r\n    const watchFieldArrayRef = useRef({});\r\n    const watchFieldsRef = useRef(new Set());\r\n    const dirtyFieldsRef = useRef(new Set());\r\n    const fieldsWithValidationRef = useRef(new Set());\r\n    const validFieldsRef = useRef(new Set());\r\n    const isValidRef = useRef(true);\r\n    const defaultRenderValuesRef = useRef({});\r\n    const defaultValuesRef = useRef(defaultValues);\r\n    const isUnMount = useRef(false);\r\n    const isWatchAllRef = useRef(false);\r\n    const isSubmittedRef = useRef(false);\r\n    const isDirtyRef = useRef(false);\r\n    const submitCountRef = useRef(0);\r\n    const isSubmittingRef = useRef(false);\r\n    const handleChangeRef = useRef();\r\n    const resetFieldArrayFunctionRef = useRef({});\r\n    const fieldArrayNamesRef = useRef(new Set());\r\n    const [, render] = useState();\r\n    const { isOnBlur, isOnSubmit } = useRef(modeChecker(mode)).current;\r\n    const isWindowUndefined = typeof window === UNDEFINED;\r\n    const shouldValidateCallback = !!(validationSchema || validationResolver);\r\n    const isWeb = typeof document !== UNDEFINED &&\r\n        !isWindowUndefined &&\r\n        !isUndefined(window.HTMLElement);\r\n    const isProxyEnabled = isWeb && 'Proxy' in window;\r\n    const readFormStateRef = useRef({\r\n        dirty: !isProxyEnabled,\r\n        dirtyFields: !isProxyEnabled,\r\n        isSubmitted: isOnSubmit,\r\n        submitCount: !isProxyEnabled,\r\n        touched: !isProxyEnabled,\r\n        isSubmitting: !isProxyEnabled,\r\n        isValid: !isProxyEnabled,\r\n    });\r\n    const { isOnBlur: isReValidateOnBlur, isOnSubmit: isReValidateOnSubmit, } = useRef(modeChecker(reValidateMode)).current;\r\n    const reRender = useCallback(() => {\r\n        if (!isUnMount.current) {\r\n            render({});\r\n        }\r\n    }, []);\r\n    const shouldRenderBaseOnError = useCallback((name, error, shouldRender, skipReRender) => {\r\n        let shouldReRender = shouldRender ||\r\n            shouldUpdateWithError({\r\n                errors: errorsRef.current,\r\n                error,\r\n                name,\r\n                validFields: validFieldsRef.current,\r\n                fieldsWithValidation: fieldsWithValidationRef.current,\r\n            });\r\n        if (isEmptyObject(error)) {\r\n            if (fieldsWithValidationRef.current.has(name) ||\r\n                shouldValidateCallback) {\r\n                validFieldsRef.current.add(name);\r\n                shouldReRender = shouldReRender || get(errorsRef.current, name);\r\n            }\r\n            errorsRef.current = unset(errorsRef.current, [name]);\r\n        }\r\n        else {\r\n            validFieldsRef.current.delete(name);\r\n            shouldReRender = shouldReRender || !get(errorsRef.current, name);\r\n            set(errorsRef.current, name, error[name]);\r\n        }\r\n        if (shouldReRender && !skipReRender) {\r\n            reRender();\r\n            return true;\r\n        }\r\n    }, [reRender, shouldValidateCallback]);\r\n    const setFieldValue = useCallback((name, rawValue) => {\r\n        const field = fieldsRef.current[name];\r\n        if (!field) {\r\n            return false;\r\n        }\r\n        const ref = field.ref;\r\n        const options = field.options;\r\n        const { type } = ref;\r\n        const value = isWeb && isHTMLElement(ref) && isNullOrUndefined(rawValue)\r\n            ? ''\r\n            : rawValue;\r\n        if (isRadioInput(ref) && options) {\r\n            options.forEach(({ ref: radioRef }) => (radioRef.checked = radioRef.value === value));\r\n        }\r\n        else if (isFileInput(ref)) {\r\n            if (isEmptyString(value) ||\r\n                isFileListObject(value)) {\r\n                ref.files = value;\r\n            }\r\n            else {\r\n                ref.value = value;\r\n            }\r\n        }\r\n        else if (isMultipleSelect(ref)) {\r\n            [...ref.options].forEach(selectRef => (selectRef.selected = value.includes(selectRef.value)));\r\n        }\r\n        else if (isCheckBoxInput(ref) && options) {\r\n            options.length > 1\r\n                ? options.forEach(({ ref: checkboxRef }) => (checkboxRef.checked = value.includes(checkboxRef.value)))\r\n                : (options[0].ref.checked = !!value);\r\n        }\r\n        else {\r\n            ref.value = value;\r\n        }\r\n        return !!type;\r\n    }, [isWeb]);\r\n    const setDirty = (name) => {\r\n        if (!fieldsRef.current[name] ||\r\n            (!readFormStateRef.current.dirty && !readFormStateRef.current.dirtyFields)) {\r\n            return false;\r\n        }\r\n        const isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\r\n        const previousDirtyFieldsLength = dirtyFieldsRef.current.size;\r\n        let isDirty = defaultRenderValuesRef.current[name] !==\r\n            getFieldValue(fieldsRef.current, fieldsRef.current[name].ref);\r\n        if (isFieldArray) {\r\n            const fieldArrayName = name.substring(0, name.indexOf('['));\r\n            isDirty = getIsFieldsDifferent(getFieldValueByName(fieldsRef.current, fieldArrayName), get(defaultValuesRef.current, fieldArrayName));\r\n        }\r\n        const isDirtyChanged = (isFieldArray ? isDirtyRef.current : dirtyFieldsRef.current.has(name)) !==\r\n            isDirty;\r\n        if (isDirty) {\r\n            dirtyFieldsRef.current.add(name);\r\n        }\r\n        else {\r\n            dirtyFieldsRef.current.delete(name);\r\n        }\r\n        isDirtyRef.current = isFieldArray ? isDirty : !!dirtyFieldsRef.current.size;\r\n        return readFormStateRef.current.dirty\r\n            ? isDirtyChanged\r\n            : previousDirtyFieldsLength !== dirtyFieldsRef.current.size;\r\n    };\r\n    const setInternalValue = useCallback((name, value) => {\r\n        setFieldValue(name, value);\r\n        if (setDirty(name) ||\r\n            (!get(touchedFieldsRef.current, name) &&\r\n                readFormStateRef.current.touched)) {\r\n            return !!set(touchedFieldsRef.current, name, true);\r\n        }\r\n    }, [setFieldValue]);\r\n    const executeValidation = useCallback(async (name, skipReRender) => {\r\n        const field = fieldsRef.current[name];\r\n        if (!field) {\r\n            return false;\r\n        }\r\n        const error = await validateField(fieldsRef, validateAllFieldCriteria, field);\r\n        shouldRenderBaseOnError(name, error, false, skipReRender);\r\n        return isEmptyObject(error);\r\n    }, [shouldRenderBaseOnError, validateAllFieldCriteria]);\r\n    const executeSchemaValidation = useCallback(async (payload) => {\r\n        const { errors } = await validateWithSchema(validationSchema, validateAllFieldCriteria, getFieldValueByName(fieldsRef.current), validationResolver, validationContext);\r\n        const previousFormIsValid = isValidRef.current;\r\n        isValidRef.current = isEmptyObject(errors);\r\n        if (isArray(payload)) {\r\n            payload.forEach(name => {\r\n                const error = get(errors, name);\r\n                if (error) {\r\n                    set(errorsRef.current, name, error);\r\n                }\r\n                else {\r\n                    unset(errorsRef.current, [name]);\r\n                }\r\n            });\r\n            reRender();\r\n        }\r\n        else {\r\n            shouldRenderBaseOnError(payload, (get(errors, payload)\r\n                ? { [payload]: get(errors, payload) }\r\n                : {}), previousFormIsValid !== isValidRef.current);\r\n        }\r\n        return isEmptyObject(errorsRef.current);\r\n    }, [\r\n        reRender,\r\n        shouldRenderBaseOnError,\r\n        validateAllFieldCriteria,\r\n        validationContext,\r\n        validationResolver,\r\n        validationSchema,\r\n    ]);\r\n    const triggerValidation = useCallback(async (payload) => {\r\n        const fields = payload || Object.keys(fieldsRef.current);\r\n        if (shouldValidateCallback) {\r\n            return executeSchemaValidation(fields);\r\n        }\r\n        if (isArray(fields)) {\r\n            const result = await Promise.all(fields.map(async (data) => await executeValidation(data, true)));\r\n            reRender();\r\n            return result.every(Boolean);\r\n        }\r\n        return await executeValidation(fields);\r\n    }, [\r\n        executeSchemaValidation,\r\n        executeValidation,\r\n        reRender,\r\n        shouldValidateCallback,\r\n    ]);\r\n    const isFieldWatched = (name) => isWatchAllRef.current ||\r\n        watchFieldsRef.current.has(name) ||\r\n        (!isKey(name) &&\r\n            fieldArrayNamesRef.current.has((name.match(/\\w+/) || [])[0]));\r\n    const setValue = useCallback((name, value, shouldValidate) => {\r\n        const shouldRender = setInternalValue(name, value) || isFieldWatched(name);\r\n        if (shouldRender) {\r\n            reRender();\r\n        }\r\n        if (shouldValidate) {\r\n            triggerValidation(name);\r\n        }\r\n        return;\r\n    }, [reRender, setInternalValue, triggerValidation]);\r\n    handleChangeRef.current = handleChangeRef.current\r\n        ? handleChangeRef.current\r\n        : async ({ type, target }) => {\r\n            const name = target ? target.name : '';\r\n            const fields = fieldsRef.current;\r\n            const errors = errorsRef.current;\r\n            const field = fields[name];\r\n            const currentError = get(errors, name);\r\n            let error;\r\n            if (!field) {\r\n                return;\r\n            }\r\n            const isBlurEvent = type === EVENTS.BLUR;\r\n            const shouldSkipValidation = skipValidation({\r\n                hasError: !!currentError,\r\n                isBlurEvent,\r\n                isOnSubmit,\r\n                isReValidateOnSubmit,\r\n                isOnBlur,\r\n                isReValidateOnBlur,\r\n                isSubmitted: isSubmittedRef.current,\r\n            });\r\n            const shouldUpdateDirty = setDirty(name);\r\n            let shouldUpdateState = isFieldWatched(name) || shouldUpdateDirty;\r\n            if (isBlurEvent &&\r\n                !get(touchedFieldsRef.current, name) &&\r\n                readFormStateRef.current.touched) {\r\n                set(touchedFieldsRef.current, name, true);\r\n                shouldUpdateState = true;\r\n            }\r\n            if (shouldSkipValidation) {\r\n                return shouldUpdateState && reRender();\r\n            }\r\n            if (shouldValidateCallback) {\r\n                const { errors } = await validateWithSchema(validationSchema, validateAllFieldCriteria, getFieldValueByName(fields), validationResolver, validationContext);\r\n                const previousFormIsValid = isValidRef.current;\r\n                isValidRef.current = isEmptyObject(errors);\r\n                error = (get(errors, name)\r\n                    ? { [name]: get(errors, name) }\r\n                    : {});\r\n                if (previousFormIsValid !== isValidRef.current) {\r\n                    shouldUpdateState = true;\r\n                }\r\n            }\r\n            else {\r\n                error = await validateField(fieldsRef, validateAllFieldCriteria, field);\r\n            }\r\n            if (!shouldRenderBaseOnError(name, error) && shouldUpdateState) {\r\n                reRender();\r\n            }\r\n        };\r\n    const validateSchemaIsValid = useCallback((values = {}) => {\r\n        const fieldValues = isEmptyObject(defaultValuesRef.current)\r\n            ? getFieldsValues(fieldsRef.current)\r\n            : defaultValuesRef.current;\r\n        validateWithSchema(validationSchema, validateAllFieldCriteria, transformToNestObject(Object.assign(Object.assign({}, fieldValues), values)), validationResolver, validationContext).then(({ errors }) => {\r\n            const previousFormIsValid = isValidRef.current;\r\n            isValidRef.current = isEmptyObject(errors);\r\n            if (previousFormIsValid !== isValidRef.current) {\r\n                reRender();\r\n            }\r\n        });\r\n    }, \r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [reRender, validateAllFieldCriteria, validationContext, validationResolver]);\r\n    const removeFieldEventListener = (field, forceDelete) => {\r\n        if (!isUndefined(handleChangeRef.current) && field) {\r\n            findRemovedFieldAndRemoveListener(fieldsRef.current, handleChangeRef.current, field, forceDelete);\r\n        }\r\n    };\r\n    const removeFieldEventListenerAndRef = useCallback((field, forceDelete) => {\r\n        if (!field ||\r\n            (field &&\r\n                isNameInFieldArray(fieldArrayNamesRef.current, field.ref.name) &&\r\n                !forceDelete)) {\r\n            return;\r\n        }\r\n        removeFieldEventListener(field, forceDelete);\r\n        const { name } = field.ref;\r\n        errorsRef.current = unset(errorsRef.current, [name]);\r\n        touchedFieldsRef.current = unset(touchedFieldsRef.current, [name]);\r\n        defaultRenderValuesRef.current = unset(defaultRenderValuesRef.current, [\r\n            name,\r\n        ]);\r\n        [\r\n            dirtyFieldsRef,\r\n            fieldsWithValidationRef,\r\n            validFieldsRef,\r\n            watchFieldsRef,\r\n        ].forEach(data => data.current.delete(name));\r\n        if (readFormStateRef.current.isValid ||\r\n            readFormStateRef.current.touched) {\r\n            reRender();\r\n            if (shouldValidateCallback) {\r\n                validateSchemaIsValid();\r\n            }\r\n        }\r\n    }, [reRender, shouldValidateCallback, validateSchemaIsValid]);\r\n    function clearError(name) {\r\n        if (isUndefined(name)) {\r\n            errorsRef.current = {};\r\n        }\r\n        else {\r\n            unset(errorsRef.current, isArray(name) ? name : [name]);\r\n        }\r\n        reRender();\r\n    }\r\n    const setInternalError = ({ name, type, types, message, preventRender, }) => {\r\n        const field = fieldsRef.current[name];\r\n        if (!isSameError(errorsRef.current[name], {\r\n            type,\r\n            message,\r\n            types,\r\n        })) {\r\n            set(errorsRef.current, name, {\r\n                type,\r\n                types,\r\n                message,\r\n                ref: field ? field.ref : {},\r\n                isManual: true,\r\n            });\r\n            if (!preventRender) {\r\n                reRender();\r\n            }\r\n        }\r\n    };\r\n    function setError(name, type = '', message) {\r\n        if (isString(name)) {\r\n            setInternalError(Object.assign({ name }, (isObject(type)\r\n                ? {\r\n                    types: type,\r\n                    type: '',\r\n                }\r\n                : {\r\n                    type,\r\n                    message,\r\n                })));\r\n        }\r\n        else if (isArray(name)) {\r\n            name.forEach(error => setInternalError(Object.assign(Object.assign({}, error), { preventRender: true })));\r\n            reRender();\r\n        }\r\n    }\r\n    function watch(fieldNames, defaultValue) {\r\n        const combinedDefaultValues = isUndefined(defaultValue)\r\n            ? isUndefined(defaultValuesRef.current)\r\n                ? {}\r\n                : defaultValuesRef.current\r\n            : defaultValue;\r\n        const fieldValues = getFieldsValues(fieldsRef.current, fieldNames);\r\n        const watchFields = watchFieldsRef.current;\r\n        if (isProxyEnabled) {\r\n            readFormStateRef.current.dirty = true;\r\n        }\r\n        if (isString(fieldNames)) {\r\n            return assignWatchFields(fieldValues, fieldNames, watchFields, combinedDefaultValues, fieldArrayNamesRef.current.has(fieldNames)\r\n                ? watchFieldArrayRef.current[fieldNames]\r\n                : undefined);\r\n        }\r\n        if (isArray(fieldNames)) {\r\n            return fieldNames.reduce((previous, name) => {\r\n                let value;\r\n                if (isEmptyObject(fieldsRef.current) &&\r\n                    isObject(combinedDefaultValues)) {\r\n                    value = getDefaultValue(combinedDefaultValues, name);\r\n                }\r\n                else {\r\n                    value = assignWatchFields(fieldValues, name, watchFields, combinedDefaultValues);\r\n                }\r\n                return Object.assign(Object.assign({}, previous), { [name]: value });\r\n            }, {});\r\n        }\r\n        isWatchAllRef.current = true;\r\n        const result = (!isEmptyObject(fieldValues) && fieldValues) ||\r\n            defaultValue ||\r\n            defaultValuesRef.current;\r\n        return fieldNames && fieldNames.nest\r\n            ? transformToNestObject(result)\r\n            : result;\r\n    }\r\n    function unregister(names) {\r\n        if (!isEmptyObject(fieldsRef.current)) {\r\n            (isArray(names) ? names : [names]).forEach(fieldName => removeFieldEventListenerAndRef(fieldsRef.current[fieldName], true));\r\n        }\r\n    }\r\n    function registerFieldsRef(ref, validateOptions = {}) {\r\n        if (!ref.name) {\r\n            // eslint-disable-next-line no-console\r\n            return console.warn('Missing name @', ref);\r\n        }\r\n        const { name, type, value } = ref;\r\n        const fieldAttributes = Object.assign({ ref }, validateOptions);\r\n        const fields = fieldsRef.current;\r\n        const isRadioOrCheckbox = isRadioInput(ref) || isCheckBoxInput(ref);\r\n        let currentField = fields[name];\r\n        let isEmptyDefaultValue = true;\r\n        let isFieldArray = false;\r\n        let defaultValue;\r\n        if (isRadioOrCheckbox\r\n            ? currentField &&\r\n                isArray(currentField.options) &&\r\n                currentField.options.find(({ ref }) => value === ref.value)\r\n            : currentField) {\r\n            fields[name] = Object.assign(Object.assign({}, currentField), validateOptions);\r\n            return;\r\n        }\r\n        if (type) {\r\n            const mutationWatcher = onDomRemove(ref, () => removeFieldEventListenerAndRef(fieldAttributes));\r\n            currentField = isRadioOrCheckbox\r\n                ? Object.assign({ options: [\r\n                        ...((currentField && currentField.options) || []),\r\n                        {\r\n                            ref,\r\n                            mutationWatcher,\r\n                        },\r\n                    ], ref: { type, name } }, validateOptions) : Object.assign(Object.assign({}, fieldAttributes), { mutationWatcher });\r\n        }\r\n        else {\r\n            currentField = fieldAttributes;\r\n        }\r\n        fields[name] = currentField;\r\n        if (!isEmptyObject(defaultValuesRef.current)) {\r\n            defaultValue = getDefaultValue(defaultValuesRef.current, name);\r\n            isEmptyDefaultValue = isUndefined(defaultValue);\r\n            isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\r\n            if (!isEmptyDefaultValue && !isFieldArray) {\r\n                setFieldValue(name, defaultValue);\r\n            }\r\n        }\r\n        if (shouldValidateCallback &&\r\n            !isFieldArray &&\r\n            readFormStateRef.current.isValid) {\r\n            validateSchemaIsValid();\r\n        }\r\n        else if (!isEmptyObject(validateOptions)) {\r\n            fieldsWithValidationRef.current.add(name);\r\n            if (!isOnSubmit && readFormStateRef.current.isValid) {\r\n                validateField(fieldsRef, validateAllFieldCriteria, currentField).then(error => {\r\n                    const previousFormIsValid = isValidRef.current;\r\n                    if (isEmptyObject(error)) {\r\n                        validFieldsRef.current.add(name);\r\n                    }\r\n                    else {\r\n                        isValidRef.current = false;\r\n                    }\r\n                    if (previousFormIsValid !== isValidRef.current) {\r\n                        reRender();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        if (!defaultRenderValuesRef.current[name] &&\r\n            !(isFieldArray && isEmptyDefaultValue)) {\r\n            defaultRenderValuesRef.current[name] = isEmptyDefaultValue\r\n                ? getFieldValue(fields, currentField.ref)\r\n                : defaultValue;\r\n        }\r\n        if (!type) {\r\n            return;\r\n        }\r\n        const fieldToAttachListener = isRadioOrCheckbox && currentField.options\r\n            ? currentField.options[currentField.options.length - 1]\r\n            : currentField;\r\n        attachEventListeners({\r\n            field: fieldToAttachListener,\r\n            isRadioOrCheckbox,\r\n            handleChange: handleChangeRef.current,\r\n        });\r\n    }\r\n    function register(refOrValidationOptions, validationOptions) {\r\n        if (isWindowUndefined) {\r\n            return;\r\n        }\r\n        if (isString(refOrValidationOptions)) {\r\n            registerFieldsRef({ name: refOrValidationOptions }, validationOptions);\r\n            return;\r\n        }\r\n        if (isObject(refOrValidationOptions) && 'name' in refOrValidationOptions) {\r\n            registerFieldsRef(refOrValidationOptions, validationOptions);\r\n            return;\r\n        }\r\n        return (ref) => ref && registerFieldsRef(ref, refOrValidationOptions);\r\n    }\r\n    const handleSubmit = useCallback((callback) => async (e) => {\r\n        if (e) {\r\n            e.preventDefault();\r\n            e.persist();\r\n        }\r\n        let fieldErrors;\r\n        let fieldValues;\r\n        const fields = fieldsRef.current;\r\n        if (readFormStateRef.current.isSubmitting) {\r\n            isSubmittingRef.current = true;\r\n            reRender();\r\n        }\r\n        try {\r\n            if (shouldValidateCallback) {\r\n                fieldValues = getFieldsValues(fields);\r\n                const { errors, values } = await validateWithSchema(validationSchema, validateAllFieldCriteria, transformToNestObject(fieldValues), validationResolver, validationContext);\r\n                errorsRef.current = errors;\r\n                fieldErrors = errors;\r\n                fieldValues = values;\r\n            }\r\n            else {\r\n                const { errors, values, } = await Object.values(fields).reduce(async (previous, field) => {\r\n                    if (!field) {\r\n                        return previous;\r\n                    }\r\n                    const resolvedPrevious = await previous;\r\n                    const { ref, ref: { name }, } = field;\r\n                    if (!fields[name]) {\r\n                        return Promise.resolve(resolvedPrevious);\r\n                    }\r\n                    const fieldError = await validateField(fieldsRef, validateAllFieldCriteria, field);\r\n                    if (fieldError[name]) {\r\n                        set(resolvedPrevious.errors, name, fieldError[name]);\r\n                        validFieldsRef.current.delete(name);\r\n                        return Promise.resolve(resolvedPrevious);\r\n                    }\r\n                    if (fieldsWithValidationRef.current.has(name)) {\r\n                        validFieldsRef.current.add(name);\r\n                    }\r\n                    resolvedPrevious.values[name] = getFieldValue(fields, ref);\r\n                    return Promise.resolve(resolvedPrevious);\r\n                }, Promise.resolve({\r\n                    errors: {},\r\n                    values: {},\r\n                }));\r\n                fieldErrors = errors;\r\n                fieldValues = values;\r\n            }\r\n            if (isEmptyObject(fieldErrors)) {\r\n                errorsRef.current = {};\r\n                await callback(transformToNestObject(fieldValues), e);\r\n            }\r\n            else {\r\n                if (submitFocusError && isWeb) {\r\n                    focusErrorField(fields, fieldErrors);\r\n                }\r\n                errorsRef.current = fieldErrors;\r\n            }\r\n        }\r\n        finally {\r\n            isSubmittedRef.current = true;\r\n            isSubmittingRef.current = false;\r\n            submitCountRef.current = submitCountRef.current + 1;\r\n            reRender();\r\n        }\r\n    }, [\r\n        isWeb,\r\n        reRender,\r\n        shouldValidateCallback,\r\n        submitFocusError,\r\n        validateAllFieldCriteria,\r\n        validationContext,\r\n        validationResolver,\r\n        validationSchema,\r\n    ]);\r\n    const resetRefs = () => {\r\n        errorsRef.current = {};\r\n        fieldsRef.current = {};\r\n        touchedFieldsRef.current = {};\r\n        validFieldsRef.current = new Set();\r\n        fieldsWithValidationRef.current = new Set();\r\n        defaultRenderValuesRef.current = {};\r\n        watchFieldsRef.current = new Set();\r\n        dirtyFieldsRef.current = new Set();\r\n        isWatchAllRef.current = false;\r\n        isSubmittedRef.current = false;\r\n        isDirtyRef.current = false;\r\n        isValidRef.current = true;\r\n        submitCountRef.current = 0;\r\n    };\r\n    const reset = (values) => {\r\n        if (isWeb) {\r\n            for (const value of Object.values(fieldsRef.current)) {\r\n                if (value && isHTMLElement(value.ref) && value.ref.closest) {\r\n                    try {\r\n                        value.ref.closest('form').reset();\r\n                        break;\r\n                    }\r\n                    catch (_a) { }\r\n                }\r\n            }\r\n        }\r\n        if (values) {\r\n            defaultValuesRef.current = values;\r\n        }\r\n        Object.values(resetFieldArrayFunctionRef.current).forEach(resetFieldArray => isFunction(resetFieldArray) && resetFieldArray());\r\n        resetRefs();\r\n        reRender();\r\n    };\r\n    const getValues = (payload) => {\r\n        const fieldValues = getFieldsValues(fieldsRef.current);\r\n        return payload && payload.nest\r\n            ? transformToNestObject(fieldValues)\r\n            : fieldValues;\r\n    };\r\n    useEffect(() => () => {\r\n        isUnMount.current = true;\r\n        fieldsRef.current &&\r\n            Object.values(fieldsRef.current).forEach((field) => removeFieldEventListenerAndRef(field, true));\r\n    }, [removeFieldEventListenerAndRef]);\r\n    if (!shouldValidateCallback) {\r\n        isValidRef.current =\r\n            validFieldsRef.current.size >= fieldsWithValidationRef.current.size &&\r\n                isEmptyObject(errorsRef.current);\r\n    }\r\n    const formState = {\r\n        dirty: isDirtyRef.current,\r\n        dirtyFields: dirtyFieldsRef.current,\r\n        isSubmitted: isSubmittedRef.current,\r\n        submitCount: submitCountRef.current,\r\n        touched: touchedFieldsRef.current,\r\n        isSubmitting: isSubmittingRef.current,\r\n        isValid: isOnSubmit\r\n            ? isSubmittedRef.current && isEmptyObject(errorsRef.current)\r\n            : isValidRef.current,\r\n    };\r\n    const control = Object.assign(Object.assign({ register,\r\n        unregister,\r\n        removeFieldEventListener,\r\n        getValues,\r\n        setValue,\r\n        triggerValidation }, (shouldValidateCallback ? { validateSchemaIsValid } : {})), { formState, mode: {\r\n            isOnBlur,\r\n            isOnSubmit,\r\n        }, reValidateMode: {\r\n            isReValidateOnBlur,\r\n            isReValidateOnSubmit,\r\n        }, errorsRef,\r\n        touchedFieldsRef,\r\n        fieldsRef,\r\n        resetFieldArrayFunctionRef,\r\n        validFieldsRef,\r\n        fieldsWithValidationRef,\r\n        watchFieldArrayRef,\r\n        fieldArrayNamesRef,\r\n        isDirtyRef,\r\n        readFormStateRef,\r\n        defaultValuesRef });\r\n    return {\r\n        watch,\r\n        control,\r\n        handleSubmit,\r\n        setValue,\r\n        triggerValidation,\r\n        getValues: useCallback(getValues, []),\r\n        reset: useCallback(reset, []),\r\n        register: useCallback(register, [\r\n            defaultValuesRef.current,\r\n            defaultRenderValuesRef.current,\r\n        ]),\r\n        unregister: useCallback(unregister, []),\r\n        clearError: useCallback(clearError, []),\r\n        setError: useCallback(setError, []),\r\n        errors: errorsRef.current,\r\n        formState: isProxyEnabled\r\n            ? new Proxy(formState, {\r\n                get: (obj, prop) => {\r\n                    if (prop in obj) {\r\n                        readFormStateRef.current[prop] = true;\r\n                        return obj[prop];\r\n                    }\r\n                    return {};\r\n                },\r\n            })\r\n            : formState,\r\n    };\r\n}\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nconst FormGlobalContext = createContext(null);\r\nfunction useFormContext() {\r\n    return useContext(FormGlobalContext);\r\n}\r\nfunction FormContext(_a) {\r\n    var { children, formState, errors } = _a, restMethods = __rest(_a, [\"children\", \"formState\", \"errors\"]);\r\n    return (createElement(FormGlobalContext.Provider, { value: Object.assign(Object.assign({}, restMethods), { formState, errors }) }, children));\r\n}\n\nvar generateId = () => {\r\n    const d = typeof performance === UNDEFINED ? Date.now() : performance.now() * 1000;\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        const r = (Math.random() * 16 + d) % 16 | 0;\r\n        return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\r\n    });\r\n};\n\nconst appendId = (value, keyName) => (Object.assign(Object.assign({}, (isObject(value) ? value : { value })), { [keyName]: generateId() }));\r\nconst mapIds = (data, keyName) => (isArray(data) ? data : []).map(value => appendId(value, keyName));\n\nvar removeArrayAt = (data, index) => isUndefined(index)\r\n    ? []\r\n    : data.filter((_, i) => (isArray(index) ? index : [index]).indexOf(i) < 0);\n\nvar moveArrayAt = (data, from, to) => isArray(data) ? data.splice(to, 0, data.splice(from, 1)[0]) : [];\n\nvar swapArrayAt = (fields, indexA, indexB) => isArray(fields) &&\r\n    ([fields[indexA], fields[indexB]] = [fields[indexB], fields[indexA]]);\n\nvar prependAt = (data, value) => [\r\n    ...(isArray(value) ? value : [value || null]),\r\n    ...data,\r\n];\n\nvar insertAt = (data, index, value) => [\r\n    ...data.slice(0, index),\r\n    ...(isArray(value) ? value : [value || null]),\r\n    ...data.slice(index),\r\n];\n\nvar fillEmptyArray = (value) => isArray(value) ? Array(value.length).fill(null) : undefined;\n\nconst { useEffect: useEffect$1, useRef: useRef$1, useState: useState$1 } = React;\r\nconst useFieldArray = ({ control, name, keyName = 'id', }) => {\r\n    const methods = useFormContext();\r\n    const { resetFieldArrayFunctionRef, fieldArrayNamesRef, fieldsRef, getValues, defaultValuesRef, removeFieldEventListener, errorsRef, isDirtyRef, touchedFieldsRef, readFormStateRef, watchFieldArrayRef, validFieldsRef, fieldsWithValidationRef, validateSchemaIsValid, } = control || methods.control;\r\n    const memoizedDefaultValues = useRef$1(get(defaultValuesRef.current, name, []));\r\n    const [fields, setField] = useState$1(mapIds(memoizedDefaultValues.current, keyName));\r\n    const appendValueWithKey = (value) => value.map((v) => appendId(v, keyName));\r\n    const commonTasks = (fieldsValues) => {\r\n        watchFieldArrayRef.current[name] = fieldsValues;\r\n        setField(fieldsValues);\r\n        if (readFormStateRef.current.isValid && validateSchemaIsValid) {\r\n            validateSchemaIsValid({\r\n                [name]: fieldsValues,\r\n            });\r\n        }\r\n    };\r\n    const resetFields = (flagOrFields) => {\r\n        if (readFormStateRef.current.dirty) {\r\n            isDirtyRef.current = isUndefined(flagOrFields)\r\n                ? true\r\n                : getIsFieldsDifferent(flagOrFields, memoizedDefaultValues.current);\r\n        }\r\n        for (const key in fieldsRef.current) {\r\n            if (isMatchFieldArrayName(key, name) && fieldsRef.current[key]) {\r\n                removeFieldEventListener(fieldsRef.current[key], true);\r\n            }\r\n        }\r\n    };\r\n    const mapCurrentFieldsValueWithState = () => {\r\n        const currentFieldsValue = getValues({ nest: true })[name];\r\n        if (isArray(currentFieldsValue)) {\r\n            for (let i = 0; i < currentFieldsValue.length; i++) {\r\n                fields[i] = Object.assign(Object.assign({}, fields[i]), currentFieldsValue[i]);\r\n            }\r\n        }\r\n    };\r\n    const append = (value) => {\r\n        mapCurrentFieldsValueWithState();\r\n        if (readFormStateRef.current.dirty) {\r\n            isDirtyRef.current = true;\r\n        }\r\n        commonTasks([\r\n            ...fields,\r\n            ...(isArray(value)\r\n                ? appendValueWithKey(value)\r\n                : [appendId(value, keyName)]),\r\n        ]);\r\n    };\r\n    const prepend = (value) => {\r\n        mapCurrentFieldsValueWithState();\r\n        resetFields();\r\n        commonTasks(prependAt(fields, isArray(value) ? appendValueWithKey(value) : [appendId(value, keyName)]));\r\n        if (errorsRef.current[name]) {\r\n            errorsRef.current[name] = prependAt(errorsRef.current[name], fillEmptyArray(value));\r\n        }\r\n        if (readFormStateRef.current.touched && touchedFieldsRef.current[name]) {\r\n            touchedFieldsRef.current[name] = prependAt(touchedFieldsRef.current[name], fillEmptyArray(value));\r\n        }\r\n    };\r\n    const remove = (index) => {\r\n        if (!isUndefined(index)) {\r\n            mapCurrentFieldsValueWithState();\r\n        }\r\n        resetFields(removeArrayAt(getFieldValueByName(fieldsRef.current, name), index));\r\n        commonTasks(removeArrayAt(fields, index));\r\n        if (errorsRef.current[name]) {\r\n            errorsRef.current[name] = removeArrayAt(errorsRef.current[name], index);\r\n        }\r\n        if (readFormStateRef.current.touched && touchedFieldsRef.current[name]) {\r\n            touchedFieldsRef.current[name] = removeArrayAt(touchedFieldsRef.current[name], index);\r\n        }\r\n        if (readFormStateRef.current.isValid && !validateSchemaIsValid) {\r\n            fields.forEach((field, fieldIndex) => {\r\n                if (isUndefined(index) ||\r\n                    fieldIndex === index ||\r\n                    (isArray(index) && index.indexOf(fieldIndex) >= 0)) {\r\n                    for (const key in field) {\r\n                        const removeFieldName = `${name}[${index}].${key}`;\r\n                        validFieldsRef.current.delete(removeFieldName);\r\n                        fieldsWithValidationRef.current.delete(removeFieldName);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    const insert = (index, value) => {\r\n        mapCurrentFieldsValueWithState();\r\n        resetFields(insertAt(getFieldValueByName(fieldsRef.current, name), index));\r\n        commonTasks(insertAt(fields, index, isArray(value) ? appendValueWithKey(value) : [appendId(value, keyName)]));\r\n        if (errorsRef.current[name]) {\r\n            errorsRef.current[name] = insertAt(errorsRef.current[name], index, fillEmptyArray(value));\r\n        }\r\n        if (readFormStateRef.current.touched && touchedFieldsRef.current[name]) {\r\n            touchedFieldsRef.current[name] = insertAt(touchedFieldsRef.current[name], index, fillEmptyArray(value));\r\n        }\r\n    };\r\n    const swap = (indexA, indexB) => {\r\n        mapCurrentFieldsValueWithState();\r\n        const fieldValues = getFieldValueByName(fieldsRef.current, name);\r\n        swapArrayAt(fieldValues, indexA, indexB);\r\n        resetFields(fieldValues);\r\n        swapArrayAt(fields, indexA, indexB);\r\n        commonTasks([...fields]);\r\n        if (errorsRef.current[name]) {\r\n            swapArrayAt(errorsRef.current[name], indexA, indexB);\r\n        }\r\n        if (readFormStateRef.current.touched && touchedFieldsRef.current[name]) {\r\n            swapArrayAt(touchedFieldsRef.current[name], indexA, indexB);\r\n        }\r\n    };\r\n    const move = (from, to) => {\r\n        mapCurrentFieldsValueWithState();\r\n        const fieldValues = getFieldValueByName(fieldsRef.current, name);\r\n        moveArrayAt(fieldValues, from, to);\r\n        resetFields(fieldValues);\r\n        moveArrayAt(fields, from, to);\r\n        commonTasks([...fields]);\r\n        if (errorsRef.current[name]) {\r\n            moveArrayAt(errorsRef.current[name], from, to);\r\n        }\r\n        if (readFormStateRef.current.touched && touchedFieldsRef.current[name]) {\r\n            moveArrayAt(touchedFieldsRef.current[name], from, to);\r\n        }\r\n    };\r\n    const reset = () => {\r\n        resetFields();\r\n        memoizedDefaultValues.current = get(defaultValuesRef.current, name, []);\r\n        setField(mapIds(memoizedDefaultValues.current, keyName));\r\n    };\r\n    useEffect$1(() => {\r\n        const resetFunctions = resetFieldArrayFunctionRef.current;\r\n        const fieldArrayNames = fieldArrayNamesRef.current;\r\n        fieldArrayNames.add(name);\r\n        resetFunctions[name] = reset;\r\n        watchFieldArrayRef.current[name] = {};\r\n        return () => {\r\n            resetFields();\r\n            delete resetFunctions[name];\r\n            fieldArrayNames.delete(name);\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    return {\r\n        swap,\r\n        move,\r\n        prepend,\r\n        append,\r\n        remove,\r\n        insert,\r\n        fields,\r\n    };\r\n};\n\nvar getInputValue = (target, isCheckbox) => {\r\n    if (isNullOrUndefined(target)) {\r\n        return target;\r\n    }\r\n    return isCheckbox\r\n        ? isUndefined(target.checked)\r\n            ? target\r\n            : target.checked\r\n        : isUndefined(target.value)\r\n            ? target\r\n            : target.value;\r\n};\n\nconst Controller = (_a) => {\r\n    var { name, rules, as: InnerComponent, onBlur, onChange, onChangeName = VALIDATION_MODE.onChange, onBlurName = VALIDATION_MODE.onBlur, valueName, defaultValue, control } = _a, rest = __rest(_a, [\"name\", \"rules\", \"as\", \"onBlur\", \"onChange\", \"onChangeName\", \"onBlurName\", \"valueName\", \"defaultValue\", \"control\"]);\r\n    const methods = useFormContext();\r\n    const { defaultValuesRef, setValue, register, unregister, errorsRef, removeFieldEventListener, triggerValidation, mode: { isOnSubmit, isOnBlur }, reValidateMode: { isReValidateOnBlur, isReValidateOnSubmit }, formState: { isSubmitted }, fieldsRef, fieldArrayNamesRef, } = control || methods.control;\r\n    const [value, setInputStateValue] = useState$2(isUndefined(defaultValue)\r\n        ? get(defaultValuesRef.current, name)\r\n        : defaultValue);\r\n    const valueRef = useRef$2(value);\r\n    const isCheckboxInput = isBoolean(value);\r\n    const shouldValidate = () => !skipValidation({\r\n        hasError: !!get(errorsRef.current, name),\r\n        isOnBlur,\r\n        isOnSubmit,\r\n        isReValidateOnBlur,\r\n        isReValidateOnSubmit,\r\n        isSubmitted,\r\n    });\r\n    const commonTask = (target) => {\r\n        const data = getInputValue(target, isCheckboxInput);\r\n        setInputStateValue(data);\r\n        valueRef.current = data;\r\n        return data;\r\n    };\r\n    const eventWrapper = (event) => (...arg) => setValue(name, commonTask(event(arg)), shouldValidate());\r\n    const handleChange = (e) => {\r\n        const data = commonTask(e && e.target ? e.target : e);\r\n        setValue(name, data, shouldValidate());\r\n    };\r\n    const registerField = () => {\r\n        if (isNameInFieldArray(fieldArrayNamesRef.current, name) &&\r\n            fieldsRef.current[name]) {\r\n            removeFieldEventListener(fieldsRef.current[name], true);\r\n        }\r\n        register(Object.defineProperty({\r\n            name,\r\n        }, VALUE, {\r\n            set(data) {\r\n                setInputStateValue(data);\r\n                valueRef.current = data;\r\n            },\r\n            get() {\r\n                return valueRef.current;\r\n            },\r\n        }), Object.assign({}, rules));\r\n    };\r\n    if (!fieldsRef.current[name]) {\r\n        registerField();\r\n    }\r\n    useEffect$2(() => {\r\n        registerField();\r\n        return () => {\r\n            if (!isNameInFieldArray(fieldArrayNamesRef.current, name)) {\r\n                unregister(name);\r\n            }\r\n        };\r\n    }, [name]);\r\n    const shouldReValidateOnBlur = isOnBlur || isReValidateOnBlur;\r\n    const props = Object.assign(Object.assign(Object.assign(Object.assign({ name }, rest), (onChange\r\n        ? { [onChangeName]: eventWrapper(onChange) }\r\n        : { [onChangeName]: handleChange })), (onBlur || shouldReValidateOnBlur\r\n        ? {\r\n            [onBlurName]: (...args) => {\r\n                if (onBlur) {\r\n                    onBlur(args);\r\n                }\r\n                if (shouldReValidateOnBlur) {\r\n                    triggerValidation(name);\r\n                }\r\n            },\r\n        }\r\n        : {})), { [valueName || (isCheckboxInput ? 'checked' : VALUE)]: value });\r\n    return isValidElement(InnerComponent) ? (cloneElement(InnerComponent, props)) : (createElement(InnerComponent, Object.assign({}, props)));\r\n};\n\nconst ErrorMessage = (_a) => {\r\n    var { as: InnerComponent, errors, name, message, children } = _a, rest = __rest(_a, [\"as\", \"errors\", \"name\", \"message\", \"children\"]);\r\n    const methods = useFormContext();\r\n    const error = get(errors || methods.errors, name);\r\n    if (!error) {\r\n        return null;\r\n    }\r\n    const { message: messageFromRegister, types } = error;\r\n    const props = Object.assign(Object.assign({}, (InnerComponent ? rest : {})), { children: children\r\n            ? children({ message: messageFromRegister || message, messages: types })\r\n            : messageFromRegister || message });\r\n    return InnerComponent ? (isValidElement(InnerComponent) ? (cloneElement(InnerComponent, props)) : (createElement(InnerComponent, props))) : (createElement(Fragment, Object.assign({}, props)));\r\n};\n\nexport { Controller, ErrorMessage, FormContext, useFieldArray, useForm, useFormContext };\n"]},"metadata":{},"sourceType":"module"}