{"ast":null,"code":"var _jsxFileName = \"/home/snw/Documentos/React projects/fbs/src/form/form.js\";\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/app.css';\n\nfunction Form() {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm(); // your form submit function which will invoke after successful validation\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  console.log(watch(\"example\")); // you can watch individual input by pass the name of the input\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Nombres y Apellidos Completos\"), React.createElement(\"input\", {\n    name: \"example\",\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Tipo Documento\"), React.createElement(\"input\", {\n    name: \"exampleRequired\",\n    ref: register({\n      required: true,\n      maxLength: 10\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), errors.exampleRequired && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"This field is required\"), React.createElement(Button, {\n    variant: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Primary\"), React.createElement(\"input\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }));\n}\n\nexport default Form;","map":{"version":3,"sources":["/home/snw/Documentos/React projects/fbs/src/form/form.js"],"names":["React","useForm","Button","Form","register","handleSubmit","watch","errors","onSubmit","data","console","log","required","maxLength","exampleRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,sCAAP;AAEA,OAAO,mBAAP;;AAEA,SAASC,IAAT,GAAgB;AAEd,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA;AAAjC,MAA4CN,OAAO,EAAzD,CAFc,CAId;;AACA,QAAMO,QAAQ,GAAGC,IAAI,IAAI;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,GAFD;;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAAC,SAAD,CAAjB,EAVc,CAUiB;;AAE/B,SACE;AAAM,IAAA,QAAQ,EAAID,YAAY,CAACG,QAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,EAEE;AAAO,IAAA,IAAI,EAAG,SAAd;AAAwB,IAAA,GAAG,EAAIJ,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,EAKE;AACE,IAAA,IAAI,EAAG,iBADT;AAEE,IAAA,GAAG,EAAIA,QAAQ,CAAC;AAAEQ,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,SAAS,EAAE;AAA7B,KAAD,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EASGN,MAAM,CAACO,eAAP,IAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAT7B,EAWE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAG,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXF,EAaE;AAAO,IAAA,IAAI,EAAG,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF;AAiBD;;AAED,eAAeX,IAAf","sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form'\n\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport '../styles/app.css';\n\nfunction Form() {\n\n  const { register, handleSubmit, watch, errors } = useForm();\n  \n  // your form submit function which will invoke after successful validation\n  const onSubmit = data => {\n    console.log(data);\n  }; \n  \n\n  console.log(watch(\"example\")); // you can watch individual input by pass the name of the input\n\n  return (\n    <form onSubmit = {handleSubmit(onSubmit)}>\n      <label>Nombres y Apellidos Completos</label>\n      <input name = \"example\" ref = {register} />\n      \n      <label>Tipo Documento</label>\n      <input\n        name = \"exampleRequired\"\n        ref = {register({ required: true, maxLength: 10 })}\n      />\n      {errors.exampleRequired && <p>This field is required</p>}\n\n      <Button variant = \"secondary\">Primary</Button>\n\n      <input type = \"submit\" />\n    </form>\n  );\n}\n\nexport default Form;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}